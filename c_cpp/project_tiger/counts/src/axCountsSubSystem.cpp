
//********************************************************************
// Copyright (c) 2006 Premraj Nallasivmapillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include "axCountsSubSystem.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************
axCountsSubSystem * axCountsSubSystem::m_instance = NULL;

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axCountsSubSystem::axCountsSubSystem()
{
}


//********************************************************************
// destructor:
//********************************************************************
axCountsSubSystem::~axCountsSubSystem()
{
}


//********************************************************************
// data constructor:
//********************************************************************
// axCountsSubSystem::axCountsSubSystem()
// {
// }


//********************************************************************
// method:
//********************************************************************
axCountsSubSystem *
axCountsSubSystem::getInstance(void)
{
  if (!m_instance) {
    m_instance = new axCountsSubSystem();
  }

  return (m_instance);
}


