
//********************************************************************
// Copyright (c) 2006 Premraj Nallasivmapillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include "axChannelAlarmDetection.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axChannelAlarmDetection::axChannelAlarmDetection() :
  m_intChannel(NULL)
{
}


//********************************************************************
// destructor:
//********************************************************************
axChannelAlarmDetection::~axChannelAlarmDetection()
{
}


//********************************************************************
// data constructor:
// NOTE: that a Channel lock is held before entering this method
//********************************************************************
axChannelAlarmDetection::axChannelAlarmDetection(
                                              axInternalChannel * c) :
  m_intChannel(c)
{
}


//********************************************************************
// method:
//********************************************************************
bool
axChannelAlarmDetection::hasData(void)
{
  return (m_intChannel->hasData());
}


//********************************************************************
// method:
//********************************************************************
axAbstractIterator *
axChannelAlarmDetection::getCableModems(void)
{
  axAbstractIterator * ret;

  ret = m_intChannel->getCableModems();

  return (ret);
}


//********************************************************************
// method:
//********************************************************************
axAbstractIterator *
axChannelAlarmDetection::getMTAs(void)
{
  axAbstractIterator * ret;

  ret = m_intChannel->getMTAs();

  return (ret);
}


