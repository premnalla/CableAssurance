
//********************************************************************
// Copyright (c) 2006 Premraj Nallasivmapillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include "axCALog.hpp"
#include "axCsrCmPoll.hpp"

#if 0
#include "axWriteLockOperator.hpp"
#include "axReadLockOperator.hpp"
#include "axSnmpCmPerfCmReqType.hpp"
#include "axIteratorHolder.hpp"
#include "axInternalCm.hpp"
#include "axDbCmPerfLog.hpp"
#include "axCmPerfUtils.hpp"
#endif

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axCsrCmPoll::axCsrCmPoll()
{
}


//********************************************************************
// destructor:
//********************************************************************
axCsrCmPoll::~axCsrCmPoll()
{
}


//********************************************************************
// data constructor:
//********************************************************************
axCsrCmPoll::axCsrCmPoll(axInternalCmts * cmts) :
  axCmPerfCm(cmts)
{
}


//********************************************************************
// method:
//********************************************************************
bool
axCsrCmPoll::createAndSendNextRequests(axSnmpAsyncCbReqObj * cbReqObj)
{
  bool ret = true;

  setDoneGetting();

  return (ret);
}


//********************************************************************
// method:
//********************************************************************
void
axCsrCmPoll::useResponse(axSnmpAsyncCbReqObj * cbReqObj)
{
}


