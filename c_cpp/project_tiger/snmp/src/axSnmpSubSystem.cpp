
//********************************************************************
// Copyright (c) 2006 Premraj Nallasivmapillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include <stddef.h>
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include "axSnmpSubSystem.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************
axSnmpSubSystem * axSnmpSubSystem::m_instance = NULL;
bool              axSnmpSubSystem::m_initialized = false;

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axSnmpSubSystem::axSnmpSubSystem()
{
}


//********************************************************************
// destructor:
//********************************************************************
axSnmpSubSystem::~axSnmpSubSystem()
{
}


//********************************************************************
// data constructor:
//********************************************************************
// axSnmpSubSystem::axSnmpSubSystem()
// {
// }


//********************************************************************
// method:
//********************************************************************
axSnmpSubSystem *
axSnmpSubSystem::getInstance(void)
{
  if (!m_instance) {
    m_instance = new axSnmpSubSystem();
    m_instance->initialize();
  }

  return (m_instance);
}


//********************************************************************
// method:
//********************************************************************
bool
axSnmpSubSystem::initialize(void)
{
  bool ret = true;

  if (!m_initialized) {


    // do stuff ...
    init_snmp("CableAssurance");

    // net-snmp socket layer
    SOCK_STARTUP;

    // finaly
    m_initialized = true;
  }


  return (ret);
}
