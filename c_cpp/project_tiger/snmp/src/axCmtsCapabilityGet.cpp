/********************************************************************/
/*********************** OBSOLETED **********************************/
/********************************************************************/

//********************************************************************
// Copyright (c) 2006 Premraj Nallasivmapillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include "axCmtsCapabilityGet.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axCmtsCapabilityGet::axCmtsCapabilityGet() :
  m_reqType(NULL), m_intCmts(NULL)
{
}


//********************************************************************
// destructor:
//********************************************************************
axCmtsCapabilityGet::~axCmtsCapabilityGet()
{
}


//********************************************************************
// data constructor:
//********************************************************************
axCmtsCapabilityGet::axCmtsCapabilityGet(axSnmpSession * s,
    axInternalCmts * intCmts) :
  axAbstractSnmpSingleGetWork(s),
  m_intCmts(intCmts)
{
  m_reqType = axSnmpCmtsCmStatusReqType::getInstance();
}


//********************************************************************
// method:
//********************************************************************
netsnmp_pdu *
axCmtsCapabilityGet::createRequestPdu(void)
{
  netsnmp_pdu * req = snmp_pdu_create(SNMP_MSG_GETNEXT);
  // req->non_repeaters = m_reqType->getNonRepeters();
  // req->max_repetitions = m_reqType->getMaxRepetitions();
  return (req);
}

