/* cPeerServCPeerServiceSOAPBindingObject.h
   Generated by gSOAP 2.7.9c from include/cPeerServices.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef cPeerServCPeerServiceSOAPBinding_H
#define cPeerServCPeerServiceSOAPBinding_H
#include "cPeerServH.h"

/******************************************************************************\
 *                                                                            *
 * Service Object                                                             *
 *                                                                            *
\******************************************************************************/

extern SOAP_NMAC struct Namespace cPeerServ_namespaces[];
class CPeerServiceSOAPBinding : public soap
{    public:
	CPeerServiceSOAPBinding()
	{ soap_init(this); this->namespaces = cPeerServ_namespaces; };
	virtual ~CPeerServiceSOAPBinding() { soap_destroy(this); soap_end(this); soap_done(this); };
	virtual	int bind(const char *host, int port, int backlog) { return soap_bind(this, host, port, backlog); };
	virtual	int accept() { return soap_accept(this); };
	virtual	int serve() { return cPeerServ_serve(this); };
};

/******************************************************************************\
 *                                                                            *
 * Service Operations (you should define these)                               *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 cpeer__pingMta(struct soap*, ns1__TopoHierarchyKeyT *topologyKey, std::string mtaResId, std::string &result);

SOAP_FMAC5 int SOAP_FMAC6 cpeer__getMtaData(struct soap*, ns1__TopoHierarchyKeyT *topologyKey, std::string mtaResId, struct cpeer__getMtaDataResponse &_param_1);

SOAP_FMAC5 int SOAP_FMAC6 cpeer__getCmData(struct soap*, ns1__TopoHierarchyKeyT *topologyKey, std::string cmResId, struct cpeer__getCmDataResponse &_param_2);

SOAP_FMAC5 int SOAP_FMAC6 cpeer__getCmtsCmData(struct soap*, ns1__TopoHierarchyKeyT *topologyKey, std::string cmtsResId, std::string cmResId, struct cpeer__getCmtsCmDataResponse &_param_3);

SOAP_FMAC5 int SOAP_FMAC6 cpeer__sendEvent(struct soap*, ns1__EventMessageT *event, short &result);

#endif
