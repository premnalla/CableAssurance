/* allClient.cpp
   Generated by gSOAP 2.7.9c from include/allServices.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "allH.h"

SOAP_SOURCE_STAMP("@(#) allClient.cpp ver 2.7.9c 2007-07-14 19:32:06 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateCmts(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmtsT *cmts, short &result)
{	struct adm__updateCmts soap_tmp_adm__updateCmts;
	struct adm__updateCmtsResponse *soap_tmp_adm__updateCmtsResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateCmts.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateCmts(soap, &soap_tmp_adm__updateCmts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateCmts(soap, &soap_tmp_adm__updateCmts, "adm:updateCmts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateCmts(soap, &soap_tmp_adm__updateCmts, "adm:updateCmts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateCmtsResponse = soap_get_adm__updateCmtsResponse(soap, NULL, "adm:updateCmtsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateCmtsResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__addCmts(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmtsT *cmts, short &result)
{	struct adm__addCmts soap_tmp_adm__addCmts;
	struct adm__addCmtsResponse *soap_tmp_adm__addCmtsResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__addCmts.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__addCmts(soap, &soap_tmp_adm__addCmts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__addCmts(soap, &soap_tmp_adm__addCmts, "adm:addCmts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__addCmts(soap, &soap_tmp_adm__addCmts, "adm:addCmts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__addCmtsResponse = soap_get_adm__addCmtsResponse(soap, NULL, "adm:addCmtsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__addCmtsResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__deleteCmts(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmtsT *cmts, short &result)
{	struct adm__deleteCmts soap_tmp_adm__deleteCmts;
	struct adm__deleteCmtsResponse *soap_tmp_adm__deleteCmtsResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__deleteCmts.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__deleteCmts(soap, &soap_tmp_adm__deleteCmts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__deleteCmts(soap, &soap_tmp_adm__deleteCmts, "adm:deleteCmts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__deleteCmts(soap, &soap_tmp_adm__deleteCmts, "adm:deleteCmts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__deleteCmtsResponse = soap_get_adm__deleteCmtsResponse(soap, NULL, "adm:deleteCmtsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__deleteCmtsResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__addCmtsAllSnmpV2CAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TopoHierarchyKeyT *topologyKey, std::string cmtsResId, ArrayOfSnmpV2CAttributesT *attributes, short &result)
{	struct adm__addCmtsAllSnmpV2CAttributes soap_tmp_adm__addCmtsAllSnmpV2CAttributes;
	struct adm__addCmtsAllSnmpV2CAttributesResponse *soap_tmp_adm__addCmtsAllSnmpV2CAttributesResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__addCmtsAllSnmpV2CAttributes.topologyKey = topologyKey;
	soap_tmp_adm__addCmtsAllSnmpV2CAttributes.cmtsResId = cmtsResId;
	soap_tmp_adm__addCmtsAllSnmpV2CAttributes.attributes = attributes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__addCmtsAllSnmpV2CAttributes(soap, &soap_tmp_adm__addCmtsAllSnmpV2CAttributes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__addCmtsAllSnmpV2CAttributes(soap, &soap_tmp_adm__addCmtsAllSnmpV2CAttributes, "adm:addCmtsAllSnmpV2CAttributes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__addCmtsAllSnmpV2CAttributes(soap, &soap_tmp_adm__addCmtsAllSnmpV2CAttributes, "adm:addCmtsAllSnmpV2CAttributes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__addCmtsAllSnmpV2CAttributesResponse = soap_get_adm__addCmtsAllSnmpV2CAttributesResponse(soap, NULL, "adm:addCmtsAllSnmpV2CAttributesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__addCmtsAllSnmpV2CAttributesResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateCmtsAllSnmpV2CAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TopoHierarchyKeyT *topologyKey, std::string cmtsResId, ArrayOfSnmpV2CAttributesT *attributes, short &result)
{	struct adm__updateCmtsAllSnmpV2CAttributes soap_tmp_adm__updateCmtsAllSnmpV2CAttributes;
	struct adm__updateCmtsAllSnmpV2CAttributesResponse *soap_tmp_adm__updateCmtsAllSnmpV2CAttributesResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateCmtsAllSnmpV2CAttributes.topologyKey = topologyKey;
	soap_tmp_adm__updateCmtsAllSnmpV2CAttributes.cmtsResId = cmtsResId;
	soap_tmp_adm__updateCmtsAllSnmpV2CAttributes.attributes = attributes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateCmtsAllSnmpV2CAttributes(soap, &soap_tmp_adm__updateCmtsAllSnmpV2CAttributes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateCmtsAllSnmpV2CAttributes(soap, &soap_tmp_adm__updateCmtsAllSnmpV2CAttributes, "adm:updateCmtsAllSnmpV2CAttributes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateCmtsAllSnmpV2CAttributes(soap, &soap_tmp_adm__updateCmtsAllSnmpV2CAttributes, "adm:updateCmtsAllSnmpV2CAttributes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateCmtsAllSnmpV2CAttributesResponse = soap_get_adm__updateCmtsAllSnmpV2CAttributesResponse(soap, NULL, "adm:updateCmtsAllSnmpV2CAttributesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateCmtsAllSnmpV2CAttributesResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateCms(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmsT *cms, short &result)
{	struct adm__updateCms soap_tmp_adm__updateCms;
	struct adm__updateCmsResponse *soap_tmp_adm__updateCmsResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateCms.cms = cms;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateCms(soap, &soap_tmp_adm__updateCms);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateCms(soap, &soap_tmp_adm__updateCms, "adm:updateCms", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateCms(soap, &soap_tmp_adm__updateCms, "adm:updateCms", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateCmsResponse = soap_get_adm__updateCmsResponse(soap, NULL, "adm:updateCmsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateCmsResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__addCms(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmsT *cms, short &result)
{	struct adm__addCms soap_tmp_adm__addCms;
	struct adm__addCmsResponse *soap_tmp_adm__addCmsResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__addCms.cms = cms;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__addCms(soap, &soap_tmp_adm__addCms);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__addCms(soap, &soap_tmp_adm__addCms, "adm:addCms", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__addCms(soap, &soap_tmp_adm__addCms, "adm:addCms", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__addCmsResponse = soap_get_adm__addCmsResponse(soap, NULL, "adm:addCmsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__addCmsResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__deleteCms(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmsT *cms, short &result)
{	struct adm__deleteCms soap_tmp_adm__deleteCms;
	struct adm__deleteCmsResponse *soap_tmp_adm__deleteCmsResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__deleteCms.cms = cms;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__deleteCms(soap, &soap_tmp_adm__deleteCms);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__deleteCms(soap, &soap_tmp_adm__deleteCms, "adm:deleteCms", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__deleteCms(soap, &soap_tmp_adm__deleteCms, "adm:deleteCms", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__deleteCmsResponse = soap_get_adm__deleteCmsResponse(soap, NULL, "adm:deleteCmsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__deleteCmsResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getPollingIntervals(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getPollingIntervalsResponse &_param_1)
{	struct adm__getPollingIntervals soap_tmp_adm__getPollingIntervals;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getPollingIntervals(soap, &soap_tmp_adm__getPollingIntervals);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getPollingIntervals(soap, &soap_tmp_adm__getPollingIntervals, "adm:getPollingIntervals", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getPollingIntervals(soap, &soap_tmp_adm__getPollingIntervals, "adm:getPollingIntervals", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getPollingIntervalsResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getPollingIntervalsResponse(soap, &_param_1, "adm:getPollingIntervalsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updatePollingIntervals(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__PollingIntervalsT *pollintInterval, short &result)
{	struct adm__updatePollingIntervals soap_tmp_adm__updatePollingIntervals;
	struct adm__updatePollingIntervalsResponse *soap_tmp_adm__updatePollingIntervalsResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updatePollingIntervals.pollintInterval = pollintInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updatePollingIntervals(soap, &soap_tmp_adm__updatePollingIntervals);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updatePollingIntervals(soap, &soap_tmp_adm__updatePollingIntervals, "adm:updatePollingIntervals", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updatePollingIntervals(soap, &soap_tmp_adm__updatePollingIntervals, "adm:updatePollingIntervals", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updatePollingIntervalsResponse = soap_get_adm__updatePollingIntervalsResponse(soap, NULL, "adm:updatePollingIntervalsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updatePollingIntervalsResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getMtaStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getMtaStatusThresholdResponse &_param_2)
{	struct adm__getMtaStatusThreshold soap_tmp_adm__getMtaStatusThreshold;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getMtaStatusThreshold(soap, &soap_tmp_adm__getMtaStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getMtaStatusThreshold(soap, &soap_tmp_adm__getMtaStatusThreshold, "adm:getMtaStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getMtaStatusThreshold(soap, &soap_tmp_adm__getMtaStatusThreshold, "adm:getMtaStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getMtaStatusThresholdResponse(soap, &_param_2);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getMtaStatusThresholdResponse(soap, &_param_2, "adm:getMtaStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateMtaStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__MtaStatusThresholdT *pollintInterval, short &result)
{	struct adm__updateMtaStatusThreshold soap_tmp_adm__updateMtaStatusThreshold;
	struct adm__updateMtaStatusThresholdResponse *soap_tmp_adm__updateMtaStatusThresholdResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateMtaStatusThreshold.pollintInterval = pollintInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateMtaStatusThreshold(soap, &soap_tmp_adm__updateMtaStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateMtaStatusThreshold(soap, &soap_tmp_adm__updateMtaStatusThreshold, "adm:updateMtaStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateMtaStatusThreshold(soap, &soap_tmp_adm__updateMtaStatusThreshold, "adm:updateMtaStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateMtaStatusThresholdResponse = soap_get_adm__updateMtaStatusThresholdResponse(soap, NULL, "adm:updateMtaStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateMtaStatusThresholdResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getHfcStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getHfcStatusThresholdResponse &_param_3)
{	struct adm__getHfcStatusThreshold soap_tmp_adm__getHfcStatusThreshold;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getHfcStatusThreshold(soap, &soap_tmp_adm__getHfcStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getHfcStatusThreshold(soap, &soap_tmp_adm__getHfcStatusThreshold, "adm:getHfcStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getHfcStatusThreshold(soap, &soap_tmp_adm__getHfcStatusThreshold, "adm:getHfcStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getHfcStatusThresholdResponse(soap, &_param_3);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getHfcStatusThresholdResponse(soap, &_param_3, "adm:getHfcStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateHfcStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__HfcStatusThresholdT *pollintInterval, short &result)
{	struct adm__updateHfcStatusThreshold soap_tmp_adm__updateHfcStatusThreshold;
	struct adm__updateHfcStatusThresholdResponse *soap_tmp_adm__updateHfcStatusThresholdResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateHfcStatusThreshold.pollintInterval = pollintInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateHfcStatusThreshold(soap, &soap_tmp_adm__updateHfcStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateHfcStatusThreshold(soap, &soap_tmp_adm__updateHfcStatusThreshold, "adm:updateHfcStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateHfcStatusThreshold(soap, &soap_tmp_adm__updateHfcStatusThreshold, "adm:updateHfcStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateHfcStatusThresholdResponse = soap_get_adm__updateHfcStatusThresholdResponse(soap, NULL, "adm:updateHfcStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateHfcStatusThresholdResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getChannelStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getChannelStatusThresholdResponse &_param_4)
{	struct adm__getChannelStatusThreshold soap_tmp_adm__getChannelStatusThreshold;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getChannelStatusThreshold(soap, &soap_tmp_adm__getChannelStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getChannelStatusThreshold(soap, &soap_tmp_adm__getChannelStatusThreshold, "adm:getChannelStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getChannelStatusThreshold(soap, &soap_tmp_adm__getChannelStatusThreshold, "adm:getChannelStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getChannelStatusThresholdResponse(soap, &_param_4);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getChannelStatusThresholdResponse(soap, &_param_4, "adm:getChannelStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateChannelStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__ChannelStatusThresholdT *pollintInterval, short &result)
{	struct adm__updateChannelStatusThreshold soap_tmp_adm__updateChannelStatusThreshold;
	struct adm__updateChannelStatusThresholdResponse *soap_tmp_adm__updateChannelStatusThresholdResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateChannelStatusThreshold.pollintInterval = pollintInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateChannelStatusThreshold(soap, &soap_tmp_adm__updateChannelStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateChannelStatusThreshold(soap, &soap_tmp_adm__updateChannelStatusThreshold, "adm:updateChannelStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateChannelStatusThreshold(soap, &soap_tmp_adm__updateChannelStatusThreshold, "adm:updateChannelStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateChannelStatusThresholdResponse = soap_get_adm__updateChannelStatusThresholdResponse(soap, NULL, "adm:updateChannelStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateChannelStatusThresholdResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getCmtsStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getCmtsStatusThresholdResponse &_param_5)
{	struct adm__getCmtsStatusThreshold soap_tmp_adm__getCmtsStatusThreshold;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getCmtsStatusThreshold(soap, &soap_tmp_adm__getCmtsStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getCmtsStatusThreshold(soap, &soap_tmp_adm__getCmtsStatusThreshold, "adm:getCmtsStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getCmtsStatusThreshold(soap, &soap_tmp_adm__getCmtsStatusThreshold, "adm:getCmtsStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getCmtsStatusThresholdResponse(soap, &_param_5);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getCmtsStatusThresholdResponse(soap, &_param_5, "adm:getCmtsStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateCmtsStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmtsStatusThresholdT *pollintInterval, short &result)
{	struct adm__updateCmtsStatusThreshold soap_tmp_adm__updateCmtsStatusThreshold;
	struct adm__updateCmtsStatusThresholdResponse *soap_tmp_adm__updateCmtsStatusThresholdResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateCmtsStatusThreshold.pollintInterval = pollintInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateCmtsStatusThreshold(soap, &soap_tmp_adm__updateCmtsStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateCmtsStatusThreshold(soap, &soap_tmp_adm__updateCmtsStatusThreshold, "adm:updateCmtsStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateCmtsStatusThreshold(soap, &soap_tmp_adm__updateCmtsStatusThreshold, "adm:updateCmtsStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateCmtsStatusThresholdResponse = soap_get_adm__updateCmtsStatusThresholdResponse(soap, NULL, "adm:updateCmtsStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateCmtsStatusThresholdResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getCmsStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getCmsStatusThresholdResponse &_param_6)
{	struct adm__getCmsStatusThreshold soap_tmp_adm__getCmsStatusThreshold;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getCmsStatusThreshold(soap, &soap_tmp_adm__getCmsStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getCmsStatusThreshold(soap, &soap_tmp_adm__getCmsStatusThreshold, "adm:getCmsStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getCmsStatusThreshold(soap, &soap_tmp_adm__getCmsStatusThreshold, "adm:getCmsStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getCmsStatusThresholdResponse(soap, &_param_6);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getCmsStatusThresholdResponse(soap, &_param_6, "adm:getCmsStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateCmsStatusThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmsStatusThresholdT *pollintInterval, short &result)
{	struct adm__updateCmsStatusThreshold soap_tmp_adm__updateCmsStatusThreshold;
	struct adm__updateCmsStatusThresholdResponse *soap_tmp_adm__updateCmsStatusThresholdResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateCmsStatusThreshold.pollintInterval = pollintInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateCmsStatusThreshold(soap, &soap_tmp_adm__updateCmsStatusThreshold);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateCmsStatusThreshold(soap, &soap_tmp_adm__updateCmsStatusThreshold, "adm:updateCmsStatusThreshold", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateCmsStatusThreshold(soap, &soap_tmp_adm__updateCmsStatusThreshold, "adm:updateCmsStatusThreshold", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateCmsStatusThresholdResponse = soap_get_adm__updateCmsStatusThresholdResponse(soap, NULL, "adm:updateCmsStatusThresholdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateCmsStatusThresholdResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getMtaAlarmConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getMtaAlarmConfigResponse &_param_7)
{	struct adm__getMtaAlarmConfig soap_tmp_adm__getMtaAlarmConfig;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getMtaAlarmConfig(soap, &soap_tmp_adm__getMtaAlarmConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getMtaAlarmConfig(soap, &soap_tmp_adm__getMtaAlarmConfig, "adm:getMtaAlarmConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getMtaAlarmConfig(soap, &soap_tmp_adm__getMtaAlarmConfig, "adm:getMtaAlarmConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getMtaAlarmConfigResponse(soap, &_param_7);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getMtaAlarmConfigResponse(soap, &_param_7, "adm:getMtaAlarmConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateMtaAlarmConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__MtaAlarmConfigT *alarmConfig, short &result)
{	struct adm__updateMtaAlarmConfig soap_tmp_adm__updateMtaAlarmConfig;
	struct adm__updateMtaAlarmConfigResponse *soap_tmp_adm__updateMtaAlarmConfigResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateMtaAlarmConfig.alarmConfig = alarmConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateMtaAlarmConfig(soap, &soap_tmp_adm__updateMtaAlarmConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateMtaAlarmConfig(soap, &soap_tmp_adm__updateMtaAlarmConfig, "adm:updateMtaAlarmConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateMtaAlarmConfig(soap, &soap_tmp_adm__updateMtaAlarmConfig, "adm:updateMtaAlarmConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateMtaAlarmConfigResponse = soap_get_adm__updateMtaAlarmConfigResponse(soap, NULL, "adm:updateMtaAlarmConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateMtaAlarmConfigResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getHfcAlarmConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getHfcAlarmConfigResponse &_param_8)
{	struct adm__getHfcAlarmConfig soap_tmp_adm__getHfcAlarmConfig;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getHfcAlarmConfig(soap, &soap_tmp_adm__getHfcAlarmConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getHfcAlarmConfig(soap, &soap_tmp_adm__getHfcAlarmConfig, "adm:getHfcAlarmConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getHfcAlarmConfig(soap, &soap_tmp_adm__getHfcAlarmConfig, "adm:getHfcAlarmConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getHfcAlarmConfigResponse(soap, &_param_8);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getHfcAlarmConfigResponse(soap, &_param_8, "adm:getHfcAlarmConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateHfcAlarmConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__HfcAlarmConfigT *alarmConfig, short &result)
{	struct adm__updateHfcAlarmConfig soap_tmp_adm__updateHfcAlarmConfig;
	struct adm__updateHfcAlarmConfigResponse *soap_tmp_adm__updateHfcAlarmConfigResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateHfcAlarmConfig.alarmConfig = alarmConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateHfcAlarmConfig(soap, &soap_tmp_adm__updateHfcAlarmConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateHfcAlarmConfig(soap, &soap_tmp_adm__updateHfcAlarmConfig, "adm:updateHfcAlarmConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateHfcAlarmConfig(soap, &soap_tmp_adm__updateHfcAlarmConfig, "adm:updateHfcAlarmConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateHfcAlarmConfigResponse = soap_get_adm__updateHfcAlarmConfigResponse(soap, NULL, "adm:updateHfcAlarmConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateHfcAlarmConfigResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getCmtsAlarmConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getCmtsAlarmConfigResponse &_param_9)
{	struct adm__getCmtsAlarmConfig soap_tmp_adm__getCmtsAlarmConfig;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getCmtsAlarmConfig(soap, &soap_tmp_adm__getCmtsAlarmConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getCmtsAlarmConfig(soap, &soap_tmp_adm__getCmtsAlarmConfig, "adm:getCmtsAlarmConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getCmtsAlarmConfig(soap, &soap_tmp_adm__getCmtsAlarmConfig, "adm:getCmtsAlarmConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getCmtsAlarmConfigResponse(soap, &_param_9);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getCmtsAlarmConfigResponse(soap, &_param_9, "adm:getCmtsAlarmConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateCmtsAlarmConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmtsAlarmConfigT *alarmConfig, short &result)
{	struct adm__updateCmtsAlarmConfig soap_tmp_adm__updateCmtsAlarmConfig;
	struct adm__updateCmtsAlarmConfigResponse *soap_tmp_adm__updateCmtsAlarmConfigResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateCmtsAlarmConfig.alarmConfig = alarmConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateCmtsAlarmConfig(soap, &soap_tmp_adm__updateCmtsAlarmConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateCmtsAlarmConfig(soap, &soap_tmp_adm__updateCmtsAlarmConfig, "adm:updateCmtsAlarmConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateCmtsAlarmConfig(soap, &soap_tmp_adm__updateCmtsAlarmConfig, "adm:updateCmtsAlarmConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateCmtsAlarmConfigResponse = soap_get_adm__updateCmtsAlarmConfigResponse(soap, NULL, "adm:updateCmtsAlarmConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateCmtsAlarmConfigResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getCmsAlarmConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getCmsAlarmConfigResponse &_param_10)
{	struct adm__getCmsAlarmConfig soap_tmp_adm__getCmsAlarmConfig;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getCmsAlarmConfig(soap, &soap_tmp_adm__getCmsAlarmConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getCmsAlarmConfig(soap, &soap_tmp_adm__getCmsAlarmConfig, "adm:getCmsAlarmConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getCmsAlarmConfig(soap, &soap_tmp_adm__getCmsAlarmConfig, "adm:getCmsAlarmConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getCmsAlarmConfigResponse(soap, &_param_10);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getCmsAlarmConfigResponse(soap, &_param_10, "adm:getCmsAlarmConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateCmsAlarmConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmsAlarmConfigT *alarmConfig, short &result)
{	struct adm__updateCmsAlarmConfig soap_tmp_adm__updateCmsAlarmConfig;
	struct adm__updateCmsAlarmConfigResponse *soap_tmp_adm__updateCmsAlarmConfigResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateCmsAlarmConfig.alarmConfig = alarmConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateCmsAlarmConfig(soap, &soap_tmp_adm__updateCmsAlarmConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateCmsAlarmConfig(soap, &soap_tmp_adm__updateCmsAlarmConfig, "adm:updateCmsAlarmConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateCmsAlarmConfig(soap, &soap_tmp_adm__updateCmsAlarmConfig, "adm:updateCmsAlarmConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateCmsAlarmConfigResponse = soap_get_adm__updateCmsAlarmConfigResponse(soap, NULL, "adm:updateCmsAlarmConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateCmsAlarmConfigResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateLocalSystem(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__LocalSystemT *cmts, short &result)
{	struct adm__updateLocalSystem soap_tmp_adm__updateLocalSystem;
	struct adm__updateLocalSystemResponse *soap_tmp_adm__updateLocalSystemResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateLocalSystem.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateLocalSystem(soap, &soap_tmp_adm__updateLocalSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateLocalSystem(soap, &soap_tmp_adm__updateLocalSystem, "adm:updateLocalSystem", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateLocalSystem(soap, &soap_tmp_adm__updateLocalSystem, "adm:updateLocalSystem", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateLocalSystemResponse = soap_get_adm__updateLocalSystemResponse(soap, NULL, "adm:updateLocalSystemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateLocalSystemResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateRegion(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RegionT *cmts, short &result)
{	struct adm__updateRegion soap_tmp_adm__updateRegion;
	struct adm__updateRegionResponse *soap_tmp_adm__updateRegionResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateRegion.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateRegion(soap, &soap_tmp_adm__updateRegion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateRegion(soap, &soap_tmp_adm__updateRegion, "adm:updateRegion", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateRegion(soap, &soap_tmp_adm__updateRegion, "adm:updateRegion", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateRegionResponse = soap_get_adm__updateRegionResponse(soap, NULL, "adm:updateRegionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateRegionResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__addRegion(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RegionT *cmts, short &result)
{	struct adm__addRegion soap_tmp_adm__addRegion;
	struct adm__addRegionResponse *soap_tmp_adm__addRegionResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__addRegion.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__addRegion(soap, &soap_tmp_adm__addRegion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__addRegion(soap, &soap_tmp_adm__addRegion, "adm:addRegion", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__addRegion(soap, &soap_tmp_adm__addRegion, "adm:addRegion", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__addRegionResponse = soap_get_adm__addRegionResponse(soap, NULL, "adm:addRegionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__addRegionResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateMarket(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__MarketT *cmts, short &result)
{	struct adm__updateMarket soap_tmp_adm__updateMarket;
	struct adm__updateMarketResponse *soap_tmp_adm__updateMarketResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateMarket.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateMarket(soap, &soap_tmp_adm__updateMarket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateMarket(soap, &soap_tmp_adm__updateMarket, "adm:updateMarket", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateMarket(soap, &soap_tmp_adm__updateMarket, "adm:updateMarket", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateMarketResponse = soap_get_adm__updateMarketResponse(soap, NULL, "adm:updateMarketResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateMarketResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__addMarket(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__MarketT *cmts, short &result)
{	struct adm__addMarket soap_tmp_adm__addMarket;
	struct adm__addMarketResponse *soap_tmp_adm__addMarketResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__addMarket.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__addMarket(soap, &soap_tmp_adm__addMarket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__addMarket(soap, &soap_tmp_adm__addMarket, "adm:addMarket", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__addMarket(soap, &soap_tmp_adm__addMarket, "adm:addMarket", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__addMarketResponse = soap_get_adm__addMarketResponse(soap, NULL, "adm:addMarketResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__addMarketResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateBlade(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__BladeT *cmts, short &result)
{	struct adm__updateBlade soap_tmp_adm__updateBlade;
	struct adm__updateBladeResponse *soap_tmp_adm__updateBladeResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateBlade.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateBlade(soap, &soap_tmp_adm__updateBlade);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateBlade(soap, &soap_tmp_adm__updateBlade, "adm:updateBlade", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateBlade(soap, &soap_tmp_adm__updateBlade, "adm:updateBlade", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateBladeResponse = soap_get_adm__updateBladeResponse(soap, NULL, "adm:updateBladeResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateBladeResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__addBlade(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__BladeT *cmts, short &result)
{	struct adm__addBlade soap_tmp_adm__addBlade;
	struct adm__addBladeResponse *soap_tmp_adm__addBladeResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__addBlade.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__addBlade(soap, &soap_tmp_adm__addBlade);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__addBlade(soap, &soap_tmp_adm__addBlade, "adm:addBlade", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__addBlade(soap, &soap_tmp_adm__addBlade, "adm:addBlade", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__addBladeResponse = soap_get_adm__addBladeResponse(soap, NULL, "adm:addBladeResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__addBladeResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__deleteBlade(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__BladeT *cmts, short &result)
{	struct adm__deleteBlade soap_tmp_adm__deleteBlade;
	struct adm__deleteBladeResponse *soap_tmp_adm__deleteBladeResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__deleteBlade.cmts = cmts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__deleteBlade(soap, &soap_tmp_adm__deleteBlade);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__deleteBlade(soap, &soap_tmp_adm__deleteBlade, "adm:deleteBlade", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__deleteBlade(soap, &soap_tmp_adm__deleteBlade, "adm:deleteBlade", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__deleteBladeResponse = soap_get_adm__deleteBladeResponse(soap, NULL, "adm:deleteBladeResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__deleteBladeResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getCmPerfConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getCmPerfConfigResponse &_param_11)
{	struct adm__getCmPerfConfig soap_tmp_adm__getCmPerfConfig;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getCmPerfConfig(soap, &soap_tmp_adm__getCmPerfConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getCmPerfConfig(soap, &soap_tmp_adm__getCmPerfConfig, "adm:getCmPerfConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getCmPerfConfig(soap, &soap_tmp_adm__getCmPerfConfig, "adm:getCmPerfConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getCmPerfConfigResponse(soap, &_param_11);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getCmPerfConfigResponse(soap, &_param_11, "adm:getCmPerfConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateCmPerfConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__CmPerformanceConfigT *cmPerf, short &result)
{	struct adm__updateCmPerfConfig soap_tmp_adm__updateCmPerfConfig;
	struct adm__updateCmPerfConfigResponse *soap_tmp_adm__updateCmPerfConfigResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateCmPerfConfig.cmPerf = cmPerf;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateCmPerfConfig(soap, &soap_tmp_adm__updateCmPerfConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateCmPerfConfig(soap, &soap_tmp_adm__updateCmPerfConfig, "adm:updateCmPerfConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateCmPerfConfig(soap, &soap_tmp_adm__updateCmPerfConfig, "adm:updateCmPerfConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateCmPerfConfigResponse = soap_get_adm__updateCmPerfConfigResponse(soap, NULL, "adm:updateCmPerfConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateCmPerfConfigResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__addUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__UserT *user, short &result)
{	struct adm__addUser soap_tmp_adm__addUser;
	struct adm__addUserResponse *soap_tmp_adm__addUserResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__addUser.user = user;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__addUser(soap, &soap_tmp_adm__addUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__addUser(soap, &soap_tmp_adm__addUser, "adm:addUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__addUser(soap, &soap_tmp_adm__addUser, "adm:addUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__addUserResponse = soap_get_adm__addUserResponse(soap, NULL, "adm:addUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__addUserResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getUsers(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getUsersResponse &_param_12)
{	struct adm__getUsers soap_tmp_adm__getUsers;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getUsers(soap, &soap_tmp_adm__getUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getUsers(soap, &soap_tmp_adm__getUsers, "adm:getUsers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getUsers(soap, &soap_tmp_adm__getUsers, "adm:getUsers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getUsersResponse(soap, &_param_12);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getUsersResponse(soap, &_param_12, "adm:getUsersResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string loginName, struct adm__getUserResponse &_param_13)
{	struct adm__getUser soap_tmp_adm__getUser;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__getUser.loginName = loginName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getUser(soap, &soap_tmp_adm__getUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getUser(soap, &soap_tmp_adm__getUser, "adm:getUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getUser(soap, &soap_tmp_adm__getUser, "adm:getUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getUserResponse(soap, &_param_13);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getUserResponse(soap, &_param_13, "adm:getUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__UserT *user, short &result)
{	struct adm__updateUser soap_tmp_adm__updateUser;
	struct adm__updateUserResponse *soap_tmp_adm__updateUserResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateUser.user = user;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateUser(soap, &soap_tmp_adm__updateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateUser(soap, &soap_tmp_adm__updateUser, "adm:updateUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateUser(soap, &soap_tmp_adm__updateUser, "adm:updateUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateUserResponse = soap_get_adm__updateUserResponse(soap, NULL, "adm:updateUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateUserResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateUserPassword(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string loginName, std::string newPassword, short &result)
{	struct adm__updateUserPassword soap_tmp_adm__updateUserPassword;
	struct adm__updateUserPasswordResponse *soap_tmp_adm__updateUserPasswordResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateUserPassword.loginName = loginName;
	soap_tmp_adm__updateUserPassword.newPassword = newPassword;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateUserPassword(soap, &soap_tmp_adm__updateUserPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateUserPassword(soap, &soap_tmp_adm__updateUserPassword, "adm:updateUserPassword", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateUserPassword(soap, &soap_tmp_adm__updateUserPassword, "adm:updateUserPassword", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateUserPasswordResponse = soap_get_adm__updateUserPasswordResponse(soap, NULL, "adm:updateUserPasswordResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateUserPasswordResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getRoles(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getRolesResponse &_param_14)
{	struct adm__getRoles soap_tmp_adm__getRoles;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getRoles(soap, &soap_tmp_adm__getRoles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getRoles(soap, &soap_tmp_adm__getRoles, "adm:getRoles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getRoles(soap, &soap_tmp_adm__getRoles, "adm:getRoles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getRolesResponse(soap, &_param_14);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getRolesResponse(soap, &_param_14, "adm:getRolesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getRole(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string roleName, struct adm__getRoleResponse &_param_15)
{	struct adm__getRole soap_tmp_adm__getRole;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__getRole.roleName = roleName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getRole(soap, &soap_tmp_adm__getRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getRole(soap, &soap_tmp_adm__getRole, "adm:getRole", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getRole(soap, &soap_tmp_adm__getRole, "adm:getRole", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getRoleResponse(soap, &_param_15);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getRoleResponse(soap, &_param_15, "adm:getRoleResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__updateRole(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RoleT *role, short &result)
{	struct adm__updateRole soap_tmp_adm__updateRole;
	struct adm__updateRoleResponse *soap_tmp_adm__updateRoleResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_adm__updateRole.role = role;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__updateRole(soap, &soap_tmp_adm__updateRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__updateRole(soap, &soap_tmp_adm__updateRole, "adm:updateRole", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__updateRole(soap, &soap_tmp_adm__updateRole, "adm:updateRole", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__updateRoleResponse = soap_get_adm__updateRoleResponse(soap, NULL, "adm:updateRoleResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_adm__updateRoleResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__downloadConfigFromParent(struct soap *soap, const char *soap_endpoint, const char *soap_action, short &rc)
{	struct adm__downloadConfigFromParent soap_tmp_adm__downloadConfigFromParent;
	struct adm__downloadConfigFromParentResponse *soap_tmp_adm__downloadConfigFromParentResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__downloadConfigFromParent(soap, &soap_tmp_adm__downloadConfigFromParent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__downloadConfigFromParent(soap, &soap_tmp_adm__downloadConfigFromParent, "adm:downloadConfigFromParent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__downloadConfigFromParent(soap, &soap_tmp_adm__downloadConfigFromParent, "adm:downloadConfigFromParent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &rc);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_adm__downloadConfigFromParentResponse = soap_get_adm__downloadConfigFromParentResponse(soap, NULL, "adm:downloadConfigFromParentResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	rc = soap_tmp_adm__downloadConfigFromParentResponse->rc;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_adm__getConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct adm__getConfigResponse &_param_16)
{	struct adm__getConfig soap_tmp_adm__getConfig;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/AdministrationEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_adm__getConfig(soap, &soap_tmp_adm__getConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_adm__getConfig(soap, &soap_tmp_adm__getConfig, "adm:getConfig", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_adm__getConfig(soap, &soap_tmp_adm__getConfig, "adm:getConfig", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_adm__getConfigResponse(soap, &_param_16);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_adm__getConfigResponse(soap, &_param_16, "adm:getConfigResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cms__getLineStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, ArrayOfCMSLineT *input, struct cms__getLineStatusResponse &_param_17)
{	struct cms__getLineStatus soap_tmp_cms__getLineStatus;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/CmsEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_cms__getLineStatus.input = input;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_cms__getLineStatus(soap, &soap_tmp_cms__getLineStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_cms__getLineStatus(soap, &soap_tmp_cms__getLineStatus, "cms:getLineStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_cms__getLineStatus(soap, &soap_tmp_cms__getLineStatus, "cms:getLineStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_cms__getLineStatusResponse(soap, &_param_17);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_cms__getLineStatusResponse(soap, &_param_17, "cms:getLineStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpeer__pingMta(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TopoHierarchyKeyT *topologyKey, std::string mtaResId, std::string &result)
{	struct cpeer__pingMta soap_tmp_cpeer__pingMta;
	struct cpeer__pingMtaResponse *soap_tmp_cpeer__pingMtaResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9091/CableAssurance/caservices/CPeerServiceEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_cpeer__pingMta.topologyKey = topologyKey;
	soap_tmp_cpeer__pingMta.mtaResId = mtaResId;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_cpeer__pingMta(soap, &soap_tmp_cpeer__pingMta);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_cpeer__pingMta(soap, &soap_tmp_cpeer__pingMta, "cpeer:pingMta", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_cpeer__pingMta(soap, &soap_tmp_cpeer__pingMta, "cpeer:pingMta", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_std__string(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_cpeer__pingMtaResponse = soap_get_cpeer__pingMtaResponse(soap, NULL, "cpeer:pingMtaResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_cpeer__pingMtaResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpeer__getMtaData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TopoHierarchyKeyT *topologyKey, std::string mtaResId, struct cpeer__getMtaDataResponse &_param_18)
{	struct cpeer__getMtaData soap_tmp_cpeer__getMtaData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9091/CableAssurance/caservices/CPeerServiceEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_cpeer__getMtaData.topologyKey = topologyKey;
	soap_tmp_cpeer__getMtaData.mtaResId = mtaResId;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_cpeer__getMtaData(soap, &soap_tmp_cpeer__getMtaData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_cpeer__getMtaData(soap, &soap_tmp_cpeer__getMtaData, "cpeer:getMtaData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_cpeer__getMtaData(soap, &soap_tmp_cpeer__getMtaData, "cpeer:getMtaData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_cpeer__getMtaDataResponse(soap, &_param_18);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_cpeer__getMtaDataResponse(soap, &_param_18, "cpeer:getMtaDataResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpeer__getCmData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TopoHierarchyKeyT *topologyKey, std::string cmResId, struct cpeer__getCmDataResponse &_param_19)
{	struct cpeer__getCmData soap_tmp_cpeer__getCmData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9091/CableAssurance/caservices/CPeerServiceEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_cpeer__getCmData.topologyKey = topologyKey;
	soap_tmp_cpeer__getCmData.cmResId = cmResId;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_cpeer__getCmData(soap, &soap_tmp_cpeer__getCmData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_cpeer__getCmData(soap, &soap_tmp_cpeer__getCmData, "cpeer:getCmData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_cpeer__getCmData(soap, &soap_tmp_cpeer__getCmData, "cpeer:getCmData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_cpeer__getCmDataResponse(soap, &_param_19);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_cpeer__getCmDataResponse(soap, &_param_19, "cpeer:getCmDataResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpeer__getCmtsCmData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TopoHierarchyKeyT *topologyKey, std::string cmtsResId, std::string cmResId, struct cpeer__getCmtsCmDataResponse &_param_20)
{	struct cpeer__getCmtsCmData soap_tmp_cpeer__getCmtsCmData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9091/CableAssurance/caservices/CPeerServiceEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_cpeer__getCmtsCmData.topologyKey = topologyKey;
	soap_tmp_cpeer__getCmtsCmData.cmtsResId = cmtsResId;
	soap_tmp_cpeer__getCmtsCmData.cmResId = cmResId;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_cpeer__getCmtsCmData(soap, &soap_tmp_cpeer__getCmtsCmData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_cpeer__getCmtsCmData(soap, &soap_tmp_cpeer__getCmtsCmData, "cpeer:getCmtsCmData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_cpeer__getCmtsCmData(soap, &soap_tmp_cpeer__getCmtsCmData, "cpeer:getCmtsCmData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_cpeer__getCmtsCmDataResponse(soap, &_param_20);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_cpeer__getCmtsCmDataResponse(soap, &_param_20, "cpeer:getCmtsCmDataResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cpeer__sendEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__EventMessageT *event, short &result)
{	struct cpeer__sendEvent soap_tmp_cpeer__sendEvent;
	struct cpeer__sendEventResponse *soap_tmp_cpeer__sendEventResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9091/CableAssurance/caservices/CPeerServiceEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_cpeer__sendEvent.event = event;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_cpeer__sendEvent(soap, &soap_tmp_cpeer__sendEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_cpeer__sendEvent(soap, &soap_tmp_cpeer__sendEvent, "cpeer:sendEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_cpeer__sendEvent(soap, &soap_tmp_cpeer__sendEvent, "cpeer:sendEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_short(soap, &result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_cpeer__sendEventResponse = soap_get_cpeer__sendEventResponse(soap, NULL, "cpeer:sendEventResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	result = soap_tmp_cpeer__sendEventResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cte__getCteData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ArrayOfCTEQueryInputT *queryInput, struct cte__getCteDataResponse &_param_21)
{	struct cte__getCteData soap_tmp_cte__getCteData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/CableAssurance/caservices/CteEP";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_cte__getCteData.queryInput = queryInput;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_cte__getCteData(soap, &soap_tmp_cte__getCteData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_cte__getCteData(soap, &soap_tmp_cte__getCteData, "cte:getCteData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_cte__getCteData(soap, &soap_tmp_cte__getCteData, "cte:getCteData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_cte__getCteDataResponse(soap, &_param_21);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_cte__getCteDataResponse(soap, &_param_21, "cte:getCteDataResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of allClient.cpp */
