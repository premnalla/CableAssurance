
//********************************************************************
// Copyright (c) 2006 Premraj Nallasivmapillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include "axCAAlarmCollection.hpp"
#include "axAlarmSubSystem.hpp"
#include "axAbstractCAAlarm.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axCAAlarmCollection::axCAAlarmCollection()
{
}


//********************************************************************
// destructor:
//********************************************************************
axCAAlarmCollection::~axCAAlarmCollection()
{
}


//********************************************************************
// data constructor:
//********************************************************************
axCAAlarmCollection::axCAAlarmCollection(axAbstractLock * lock) :
  axAbstractCAAlarmCollection(lock)
{
}


//********************************************************************
// method:
//********************************************************************
axObject *
axCAAlarmCollection::add(axObject * o)
{
  // printf("axCAAlarmCollection::add()\n");
  axAbstractCAAlarm * alarm = dynamic_cast<axAbstractCAAlarm *> (o);
  alarm->setInternalAlarmId(
                   axAlarmSubSystem::getInstance()->getNextAlarmId());
  return (axAbstractCAAlarmCollection::add(o));
}



