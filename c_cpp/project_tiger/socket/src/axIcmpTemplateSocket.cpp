
//********************************************************************
// Copyright (c) 2006 Premraj Nallasivmapillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include "axSocketUtils.hpp"
#include "axIcmpTemplateSocket.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axIcmpTemplateSocket::axIcmpTemplateSocket() :
  m_socketDomain(0), m_socketType(SOCK_RAW), m_socketProtocol(IPPROTO_ICMP)
{
}


//********************************************************************
// destructor:
//********************************************************************
axIcmpTemplateSocket::~axIcmpTemplateSocket()
{
}


//********************************************************************
// data constructor:
//********************************************************************
// axIcmpTemplateSocket::axIcmpTemplateSocket()
// {
// }


//********************************************************************
// method:
//********************************************************************
void
axIcmpTemplateSocket::setDomain(AX_INT32 in)
{
  m_socketDomain = in;
}


//********************************************************************
// method:
//********************************************************************
void
axIcmpTemplateSocket::setType(AX_INT32 in)
{
  m_socketType = in;
}


//********************************************************************
// method:
//********************************************************************
void
axIcmpTemplateSocket::setProtocol(AX_INT32 in)
{
  m_socketProtocol = in;
}


//********************************************************************
// method:
//********************************************************************
AX_INT32
axIcmpTemplateSocket::getDomain(void)
{
  return (m_socketDomain);
}


//********************************************************************
// method:
//********************************************************************
AX_INT32
axIcmpTemplateSocket::getType(void)
{
  return (m_socketType);
}


//********************************************************************
// method:
//********************************************************************
AX_INT32
axIcmpTemplateSocket::getProtocol(void)
{
  return (m_socketProtocol);
}


