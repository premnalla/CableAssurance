`configure' configures ACE 5.5 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
			  [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
			  [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR           user executables [EPREFIX/bin]
  --sbindir=DIR          system admin executables [EPREFIX/sbin]
  --libexecdir=DIR       program executables [EPREFIX/libexec]
  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
  --libdir=DIR           object code libraries [EPREFIX/lib]
  --includedir=DIR       C header files [PREFIX/include]
  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
  --infodir=DIR          info documentation [PREFIX/info]
  --mandir=DIR           man documentation [PREFIX/man]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

X features:
  --x-includes=DIR    X include files are in DIR
  --x-libraries=DIR   X library files are in DIR

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --enable-lib-all        build all ACE components [no]
  --enable-lib-full       build the full ACE library [yes]
  --enable-lib-os         build ACE_OS library
  --enable-lib-codecs     build ACE_Codecs library
  --enable-lib-connection build ACE_Connection library
  --enable-lib-demux      build ACE_Demux library
  --enable-lib-filecache  build ACE_Filecache library
  --enable-lib-ipc        build ACE_IPC library
  --enable-lib-logging    build ACE_Logging library
  --enable-lib-memory     build ACE_Memory library
  --enable-lib-metrics    build ACE_Metrics library
  --enable-lib-sockets    build ACE_Sockets library
  --enable-lib-streams    build ACE_Streams library
  --enable-lib-svcconf    build ACE_Svcconf library
  --enable-lib-threads    build ACE_Threads library
  --enable-lib-timer      build ACE_Timer library
  --enable-lib-token      build ACE_Token library
  --enable-lib-utils      build ACE_Utils library
  --enable-lib-uuid       build ACE_UUID library
  --enable-lib-other      build ACE_Other library
  --enable-ace-codecs     build ACE with codecs support [yes]
  --enable-ace-filecache  build ACE_Filecache support [yes]
  --enable-ace-other      build ACE with all misc pieces [yes]
  --enable-ace-token      build ACE with tokens support [yes]
  --enable-ace-uuid       build ACE with UUID support [yes]
  --enable-alloca         compile with alloca() support [no]
  --enable-rwho           build the distributed rwho program [no]
  --enable-ipv4-ipv6      compile with IPv4/IPv6 migration support [no]
  --enable-ipv6           compile with IPv6 support [no]
  --enable-log-msg-prop   enable threads inheriting ACE_Log_Msg properties
                          from parent thread [yes]
  --enable-logging        enable ACE logging macros [yes]
  --enable-malloc-stats   enable malloc statistics collection [no]
  --enable-pi-pointers    enable pos. indep. pointers [yes]
  --enable-probe          enable ACE_Timeprobes [no]
  --enable-static-obj-mgr enable static Object_Manager [yes]
  --enable-threads        enable thread support [yes]
  --enable-pthreads       enable POSIX thread (Pthreads) support [yes]
  --enable-uithreads      enable UNIX International thread support [no]
  --enable-verb-not-sup   enable verbose ENOTSUP reports [no]
  --enable-trace          enable ACE tracing [no]
  --enable-wfmo           build WFMO-using examples [no]
  --enable-winregistry    build Windows registry-using examples [no]
  --enable-fl-reactor     build support for the FlReactor [no]
  --enable-qt-reactor     build support for the QtReactor [no]
  --enable-tk-reactor     build support for the TkReactor [no]
  --enable-xt-reactor     build support for the XtReactor [no]
  --enable-qos            compile/use the ACE_QoS library [no]
  --enable-ssl            compile/use the ACE_SSL library [yes]
  --enable-acexml         compile/use the ACEXML library [yes]
  --enable-reentrant      enable reentrant functions [yes]
  --enable-ace-examples   build ACE examples [yes]
  --enable-ace-tests      build ACE tests [yes]
  --enable-ace-cdr-swap-on-read
                          configure CDR to support swap on read [yes]
  --enable-ace-cdr-swap-on-write
                          configure CDR to support swap on write [no]
  --enable-ace-cdr-alignment
                          configure CDR to require aligned access [yes]
  --enable-ace-strdup-emulation
                          use ACE's strdup emulation [no]
  --enable-ace-wcsdup-emulation
                          use ACE's wcsdup emulation [no]
  --enable-debug          enable debugging [yes]
  --enable-exceptions     enable C++ exception handling [yes]
  --enable-fast           enable -fast flag (e.g. Sun C++) [no]
  --enable-inline         enable code inlining [yes]
  --enable-optimize       enable additional optimizations [yes]
  --enable-profile        enable profiling [no]
  --enable-purify         Purify all executables [no]
  --enable-quantify       Quantify all executables [no]
  --enable-repo           use GNU template repository GNU C++ with repo
                          patches and EGCS only [no]
  --enable-rtti           enable run-time type identification [yes]
  --enable-stdcpplib      enable standard C++ library [yes]
  --enable-uses-wchar     enable use of wide characters [no]
  --enable-static[=PKGS]
                          build static libraries [default=no]
  --enable-shared[=PKGS]
                          build shared libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-tclconfig=DIR    path to tclConfig.sh [automatic]
  --with-tkconfig=DIR     path to tkConfig.sh [automatic]
  --with-x                use the X Window System
  --with-gperf            compile the gperf program [yes]
  --with-openssl[=DIR]
                          root directory of openssl installation
  --with-openssl-include=DIR
                          specify exact include dir for openssl headers
  --with-openssl-libdir=DIR
                          specify exact include dir for openssl libraries
  --with-tao              build TAO (the ACE ORB) [yes]
  --with-tli-device(=DEV) device for TCP on TLI /dev/tcp
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-pic              try to use only PIC/non-PIC objects [default=use
                          both]
  --with-tags[=TAGS]
                          include additional configurations [automatic]

Some influential environment variables:
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
              headers in a nonstandard directory <include dir>
  CXXCPP      C++ preprocessor
  CC          C compiler command
  CFLAGS      C compiler flags
  CPP         C preprocessor
  F77         Fortran 77 compiler command
  FFLAGS      Fortran 77 compiler flags

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <ace-bugs@cs.wustl.edu>.
