/* include/jDevice.h
   Generated by wsdl2h 1.2.9c from wsdl/JDevice.wsdl and typemap.dat
   2007-03-06 13:20:24 GMT
   Copyright (C) 2001-2006 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://www.palmyrasys.com/services/CableAssurance/JDevice                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

jDevice = "http://www.palmyrasys.com/services/CableAssurance/JDevice"
ns1 = "http://www.palmyrasys.com/services/CableAssurance"

*/

//gsoap ns1   schema namespace:	http://www.palmyrasys.com/services/CableAssurance
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__DeviceDetailsT.
class ns1__DeviceDetailsT;

/// "http://www.palmyrasys.com/services/CableAssurance":EndUserDeviceTypeT is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__EndUserDeviceTypeT' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__EndUserDeviceTypeT
{
	ns1__EndUserDeviceTypeT__CM,	///< xs:string value="CM"
	ns1__EndUserDeviceTypeT__eMTA,	///< xs:string value="eMTA"
};

/// "http://www.palmyrasys.com/services/CableAssurance":DeviceDetailsT is a complexType.
class ns1__DeviceDetailsT
{ public:
/// Element deviceType of type "http://www.palmyrasys.com/services/CableAssurance":EndUserDeviceTypeT.
    enum ns1__EndUserDeviceTypeT         deviceType                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap jDevice service name:	JDeviceSOAPBinding 
//gsoap jDevice service type:	JDeviceEP 
//gsoap jDevice service port:	http://localhost:9080/CableAssurance/caservices/JDeviceEP 
//gsoap jDevice service namespace:	http://www.palmyrasys.com/services/CableAssurance/JDevice 
//gsoap jDevice service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage http://www.palmyrasys.com/services/CableAssurance/JDevice Definitions

@section http___x002f_x002fwww_x002epalmyrasys_x002ecom_x002fservices_x002fCableAssurance_x002fJDevice_bindings Bindings
  - @ref JDeviceSOAPBinding

*/

/**

@page JDeviceSOAPBinding Binding "JDeviceSOAPBinding"

@section JDeviceSOAPBinding_operations Operations of Binding  "JDeviceSOAPBinding"
  - @ref jDevice__getDeviceDetails

@section JDeviceSOAPBinding_ports Endpoints of Binding  "JDeviceSOAPBinding"
  - http://localhost:9080/CableAssurance/caservices/JDeviceEP

*/

/******************************************************************************\
 *                                                                            *
 * JDeviceSOAPBinding                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * jDevice__getDeviceDetails                                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "jDevice__getDeviceDetailsResponse" of service binding "JDeviceSOAPBinding" operation "jDevice__getDeviceDetails"
struct jDevice__getDeviceDetailsResponse
{
    enum ns1__EndUserDeviceTypeT        details;
};

/// Operation "jDevice__getDeviceDetails" of service binding "JDeviceSOAPBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_jDevice__getDeviceDetails(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    std::string                         macAddress,
    // response parameters:
    struct jDevice__getDeviceDetailsResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int jDevice__getDeviceDetails(
    struct soap *soap,
    // request parameters:
    std::string                         macAddress,
    // response parameters:
    struct jDevice__getDeviceDetailsResponse&
  );
@endcode

C++ proxy class (defined in soapJDeviceSOAPBindingProxy.h):
  class JDeviceSOAPBinding;

*/

//gsoap jDevice service method-style:	getDeviceDetails rpc
//gsoap jDevice service method-encoding:	getDeviceDetails http://schemas.xmlsoap.org/soap/encoding/
//gsoap jDevice service method-action:	getDeviceDetails ""
int jDevice__getDeviceDetails(
    std::string                         macAddress,	///< Request parameter
    struct jDevice__getDeviceDetailsResponse&	///< Response struct parameter
);

/* End of include/jDevice.h */
