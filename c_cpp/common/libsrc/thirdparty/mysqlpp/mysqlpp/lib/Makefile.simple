
CXX=g++
CXXFLAGS=-I/usr/include/mysql -I.. -O2 -c

LIB_BASE=libmysqlpp
LIB_FILE=$(LIB_BASE).a
IMP_FILE=
LD=ar
LDFLAGS=cru $(LIB_FILE)

INST_DIR=/usr/local
INST_INC_DIR=$(INST_DIR)/include
INST_LIB_DIR=$(INST_DIR)/lib

DEL=rm -f

.SUFFIXES: .cpp .o
.cpp.o:
	$(CXX) $(CXXFLAGS) $<

install_platform:
	mkdir -p $(INST_INC_DIR) $(INST_LIB_DIR)
	cp *.h $(INST_INC_DIR)
	cp $(LIB_FILE) $(INST_LIB_DIR)

		connection.o \
		datetime.o \
		field_names.o \
		field_types.o \
		fields.o \
		manip.o \
		myset.o \
		qparms.o \
		query.o \
		result.o \
		row.o \
		sql_string.o \
		string_util.o \
		type_info.o \
		vallist.o

BIN_DIR_OBJS=$(addprefix $(BIN_DIR)/, $(OBJS))

all debug: $(OBJS) $(LIB_FILE) $(IMP_FILE)

.PHONY: release
release:
	$(MAKE) BIN_DIR=release

clean:
	$(RM) $(LOCAL_CLEAN)

$(LIB_FILE): $(OBJS)
	$(LD) $(LDFLAGS) $(BIN_DIR_OBJS) $(LDEXE) $(LIBS)
	$(RM) $(EX_BIN_DIR)*

coldata.o: coldata.cpp coldata.h
connection.o: connection.cpp connection.h
datetime.o: datetime.cpp datetime.h
field_names.o: field_names.cpp field_names.h
field_types.o: field_types.cpp field_types.h
fields.o: fields.cpp fields.h resiter.h
manip.o: manip.cpp manip.h
myset.o: myset.cpp myset.h
qparms.o: qparms.cpp qparms.h
query.o: query.cpp query.h resiter.h
result.o: result.cpp result.h resiter.h
row.o: row.cpp row.h resiter.h
sql_string.o: sql_string.cpp sql_string.h
string_util.o: string_util.cpp string_util.h
type_info.o: type_info.cpp type_info.h
vallist.o: vallist.cpp vallist.h
