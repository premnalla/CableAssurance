# -*- Makefile -*-
#----------------------------------------------------------------------------
#       GNU Makefile
#
# @file GNUmakefile.ACE
#
# gnu.mpd,v 1.134 2005/07/07 14:28:26 elliott_c Exp
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
MAKEFILE         = GNUmakefile
DEPENDENCY_FILE  = .depend.libaxcppbase

## LIB may be set to empty later on in this file
LIB_UNCHECKED    = libaxcppbase.a
LIB              = $(LIB_UNCHECKED)

## SHLIB may be set to empty later on in this file
SHLIB_UNCHECKED  = libaxcppbase.$(SOEXT)
SHLIB            = $(SHLIB_UNCHECKED)

FILES = \
  basic/axObject.cpp \
  basic/axString.cpp \
  basic/axAltString.cpp \
  basic/axInteger.cpp \
  basic/axLong.cpp \
  basic/axStrNVPair.cpp \
  basic/axSingletonBase.cpp \
  basic/axAbstractException.cpp \
  collection/axAbstractCollection.cpp \
  collection/axWorkerCollection.cpp \
  collection/axList.cpp \
  collection/axList_mts.cpp \
  collection/axIntHashMap.cpp \
  collection/axIntHashMap_mts.cpp \
  collection/axLongHashMap.cpp \
  collection/axLongHashMap_mts.cpp \
  collection/axStrHashMap.cpp \
  collection/axStrHashMap_mts.cpp \
  collection/axStrHashMultiMap.cpp \
  collection/axConsumerSupplierQueue.cpp \
  collection/axVector.cpp \
  collection/axVector_mts.cpp \
  proxy/axControllerProxy.cpp \
  thread/axWorker.cpp \
  connection/axAbstractMultiStates.cpp \
#  connection/axAbstractConnHandler.cpp \
#  thread/axTraceableWorker.cpp \
#

#----------------------------------------------------------------------------
#       Include macros and targets
#----------------------------------------------------------------------------
ACE_SHLIBS =

INSLIB ?= ../lib
ifeq ($(INSLIB),.)
  ifeq ($(PWD),)
    PWD=$(shell pwd)
  endif
  INSLIB = $(PWD)
endif
OUTPUT_DIRECTORY = $(INSLIB)

include $(PROJECT_ROOT)/include/makeinclude/wrapper_macros.GNU
## We don't need the ACELIB setting from wrapper_macros.GNU
ACELIB =

ifneq ($(OUTPUT_DIRECTORY),)
all: $(OUTPUT_DIRECTORY)
$(OUTPUT_DIRECTORY):
	-@$(MKDIR) "$(OUTPUT_DIRECTORY)"
endif

LIBCHECK = 1
ifneq ($(LIBCHECK), 1)
  LIB   =
  SHLIB =
  all: lib_warning
endif

LSRC   = $(FILES)

include $(PROJECT_ROOT)/include/makeinclude/macros.GNU
include $(PROJECT_ROOT)/include/makeinclude/rules.common.GNU
include $(PROJECT_ROOT)/include/makeinclude/rules.nonested.GNU
include $(PROJECT_ROOT)/include/makeinclude/rules.lib.GNU
include $(PROJECT_ROOT)/include/makeinclude/rules.local.GNU

LDFLAGS      += -L. -L../lib
CPPFLAGS     += -Iinclude
CPPFLAGS     += -DACE_HAS_ACE_TOKEN -DACE_HAS_ACE_SVCCONF
ifeq ($(shared_libs),1)
  ifneq ($(SHLIB),)
    CPPFLAGS += -DACE_BUILD_DLL
  endif
endif
ifeq ($(static_libs),1)
  CPPFLAGS += -DACE_AS_STATIC_LIBS
endif

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------
lib_warning:
	@echo This project will not be built due to the following missing library:
	@echo $(LIBCHECK)

## Some OS's have /bin/test others only have /usr/bin/test
ifeq ($(wildcard /bin/test), /bin/test)
  TEST_EXE = /bin/test
else
ifeq ($(wildcard /usr/bin/test), /usr/bin/test)
  TEST_EXE = /usr/bin/test
endif
endif

realclean: clean
ifneq ($(GENERATED_DIRTY),)
	-$(RM) -r $(GENERATED_DIRTY)
endif

