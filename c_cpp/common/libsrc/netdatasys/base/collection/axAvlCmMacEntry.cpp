//********************************************************************
// Copyright (c) 2006 by Prem Nallasivampillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
extern "C" {
#include "axNetworkDataTypes.h"
}
#include "axAvlCmMacEntry.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axAvlCmMacEntry::axAvlCmMacEntry()
{
  // memset(m_cmMac, '\0', MAX_MAC_ADDRESS_CHARS);
  zeroMacAddress(m_cmMac);
}


//********************************************************************
// destructor:
//********************************************************************
axAvlCmMacEntry::~axAvlCmMacEntry()
{
}


//********************************************************************
// data constructor:
//********************************************************************
axAvlCmMacEntry::axAvlCmMacEntry(AX_INT8 * mac)
{
  copyCharToMacAddress(m_cmMac, mac);
}


//********************************************************************
// Static Function: comparison
//********************************************************************
int
axAvlCmMacEntry::CompareFunction(const void * a, const void * b, void * p)
{
  int ret;

  const axAvlCmMacEntry * cmA = (const axAvlCmMacEntry *) a;
  const axAvlCmMacEntry * cmB = (const axAvlCmMacEntry *) b;

  ret = compareMacAddress(cmA->getCmMac(),cmB->getCmMac());

  // printf("ret = %d\n", ret);

  return (ret);
}


//********************************************************************
// method:
//********************************************************************
const AX_INT8 *
axAvlCmMacEntry::getCmMac(void) const
{
  return (m_cmMac);
}


