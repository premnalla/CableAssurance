//********************************************************************
// Copyright (c) 2006 by Prem Nallasivampillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include "axList_mts.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************

//********************************************************************
// forward declerations
//********************************************************************

//********************************************************************
// default constructor:
//********************************************************************
axList_mts::axList_mts()
{
  pthread_mutex_init(&m_collectionLock, NULL);
}

//********************************************************************
// destructor:
//********************************************************************
axList_mts::~axList_mts()
{
  pthread_mutex_destroy(&m_collectionLock);
}

//********************************************************************
// data constructor:
//********************************************************************
// axList_mts::axList_mts()
// {
// }

//********************************************************************
// method: lock
//********************************************************************
void
axList_mts::lock(void)
{
  pthread_mutex_lock(&m_collectionLock);
}


//********************************************************************
// method: unlock
//********************************************************************
void
axList_mts::unlock(void)
{
  pthread_mutex_unlock(&m_collectionLock);
}


