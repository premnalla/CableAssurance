//********************************************************************
// Copyright (c) 2006 by Prem Nallasivampillai. All rights reserved.
//********************************************************************

//********************************************************************
// include files
//********************************************************************
#include "axAbstractCollection.hpp"

//********************************************************************
// definitions/macros
//********************************************************************

//********************************************************************
// constants
//********************************************************************

//********************************************************************
// static member initialization
//********************************************************************

//********************************************************************
// forward declerations
//********************************************************************


//********************************************************************
// default constructor:
//********************************************************************
axAbstractCollection::axAbstractCollection()
{
}


//********************************************************************
// destructor:
//********************************************************************
axAbstractCollection::~axAbstractCollection()
{
}


//********************************************************************
// data constructor:
//********************************************************************
// axAbstractCollection::axAbstractCollection()
// {
// }


//********************************************************************
// method: lock
//********************************************************************
void
axAbstractCollection::lock(void)
{
}


//********************************************************************
// method: unlock
//********************************************************************
void
axAbstractCollection::unlock(void)
{
}


#if 0
//********************************************************************
// method: createIterator
//********************************************************************
axAbstractIterator *
axAbstractCollection::createIterator(void)
{
  axAbstractIterator * ret = NULL;

  return (ret);
}


//********************************************************************
// method: freeIterator
//********************************************************************
void
axAbstractCollection::freeIterator(axAbstractIterator * iter)
{
  delete iter;
}
#endif

