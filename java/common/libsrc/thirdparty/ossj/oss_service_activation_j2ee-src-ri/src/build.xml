<?xml version="1.0" encoding="iso-8859-1"?>

<!DOCTYPE project [ <!ENTITY include SYSTEM "../common.xml"> ]>

  <!-- ======================================================= -->
  <!--  Sun ONE Application Server Sample Application build xml -->
  <!-- ======================================================= -->

  <project name="oss_service_activation" default="core" basedir=".">

  <!-- ======================================================= -->
  <!--			 App name-dependent settings.				   -->
  <!-- ======================================================= -->

  <property name="appname" value="ossj_sa_ri"/>
  <property name="sample.home" value="../"/>
  <property name="sample.name" value="oss_service_activation"/>
  <property name="project.classpath" 
	 value="../lib/ossjsa.jar:
			../lib/oss_common-1_0-ri.jar
			" />
 <property name="classpath.prefix" value="${project.classpath}"/>

 <property name="ear"         value="${appname}.ear"/>  
 <property name="binary.name" value="${ear}"/>
 <property name="deploy.file" value="../${ear}"/>

  <!-- ======================================================= -->
  <!--			 Package directory structures of interest.	   -->
  <!-- ======================================================= -->

  <property name="app.pkg" value="client"/>
  <property name="jar.pkg" value=""/>
 
  <!-- ======================================================= -->
  <!--			Java Doc properties .					       -->
  <!-- ======================================================= -->
  <property name="javadoc.pkgnames" value="com.*" />

  <!-- ======================================================= -->
  <!--				Include common.xml					       -->
  <!-- ======================================================= -->
 
  &include;
	
  <!-- ======================================================= -->
  <!--		Tagets to build and deploy sample application      -->
  <!-- ======================================================= -->

  <target name="clean" depends="clean_common"/>
  <target name="init" depends="init_common"/>
  <target name="compile" depends="init,compile_common " />
  <target name="javadocs" depends="javadocs_common" />
  <target name="reconfig" />
  <target name="deploy_ear" depends="deploy_common" />
  <target name="deploy" depends="setup,deploy_ear"/>
  <target name="undeploy_ear" depends="undeploy_common"/>
  <target name="undeploy" depends="undeploy_ear,unsetup"/>
  <target name="verify" depends="verify_common"/>
  <target name="sql" depends="sql_common"/>

  <target name="jar" depends="init,create_project_ejbjar"/>
  <target name="clientjar" depends="init,create_project_client"/>
  <target name="war" depends="init,create_project_war"/>
  <target name="ear" depends="init,jar,war,clientjar,create_ear"/>
  <target name="core" depends="compile,war,ear" />
  <target name="all" depends="core,javadocs,verify,deploy"/>
 
	<target name="rmic" depends="init_common">
		<echo message="Generating stub and skeleton"/>
		<rmic iiop="true" classname="com.nokia.oss.ossj.sa.ri.order.OrderEventPropertyDescriptorImpl"
		classpath="${build.classpath}" base="${build.classesdir}" stubversion="1.2" />
	</target>
 

  <!-- ======================================================= -->
  <!-- Assemble EJB JAR module.                                -->
  <!-- ======================================================= -->

  <property name="assemble.projectejbjar" value="${assemble}/${appname}jar"/>
  <property name="projectejbjar" value="${appname}Ejb.jar"/>
  <property name="assemble.projectwar" value="${assemble}/${appname}war"/>
  <property name="projectwar" value="${appname}Web.war"/>
  <property name="assemble.projectclient" value="${assemble}/${appname}client"/>
  <property name="projectclient" value="${appname}_genericClient.jar"/>

  <target name="clean_project_client">
    <delete dir="${assemble.projectclient}"/>
  </target>

  <target name="clean_project_war">
    <delete dir="${assemble.projectwar}"/>
  </target>

  <target name="clean_project_ejbjar">
    <delete dir="${assemble.projectejbjar}"/>
  </target>

  <target name="create_project_client" depends="clean_project_client">
    <mkdir dir="${assemble.projectclient}"/>
    <copy todir="${assemble.projectclient}/com/nokia/oss/ossj/sa/client/">
      <fileset dir="${build.classesdir}/com/nokia/oss/ossj/sa/client/" includes="*.class"/>
    </copy>
    <jar jarfile="../${projectclient}"
       basedir="${assemble.projectclient}" />
    <move file="../${projectclient}" todir="../lib"/>
  </target>

  <target name="create_project_war" depends="clean_project_war">
    <mkdir dir="${assemble.projectwar}"/>
    <mkdir dir="${assemble.projectwar}/WEB-INF/classes"/>
    <copy todir="${assemble.projectwar}/WEB-INF/classes/com/nokia/oss/ossj/common/ri/">
      <fileset dir="${build.classesdir}/com/nokia/oss/ossj/common/ri/" includes="ApplicationContextImpl.class"/>
    </copy>
    <copy todir="${assemble.projectwar}/WEB-INF/classes/com/nokia/oss/ossj/sa/ri/order/">
      <fileset dir="${build.classesdir}/com/nokia/oss/ossj/sa/ri/order/" includes="OrderScheduler*.class,ServletListener.class"/>
    </copy>
    <copy file="web.xml" tofile="${assemble.projectwar}/WEB-INF/web.xml" />
    <copy file="sun-web.xml" tofile="${assemble.projectwar}/WEB-INF/sun-web.xml" />
    <jar jarfile="../${projectwar}" manifest="MANIFEST_WEB.MF"
       basedir="${assemble.projectwar}" />
    <move file="../${projectwar}" todir="${assemble.projectwar}"/>
  </target>

  <!--
  <target name="create_project_ejbjar" depends="clean_project_ejbjar, rmic">
  -->
  <target name="create_project_ejbjar" depends="clean_project_ejbjar">
    <mkdir dir="${assemble.projectejbjar}"/>
    <copy todir="${assemble.projectejbjar}/com">
      <fileset dir="${build.classesdir}/com/" includes="**/*.class"  excludes="**/OrderScheduler*.class,**/ServletListener.class,**/client/"/>
    </copy>
    <mkdir dir="${assemble.projectejbjar}/META-INF"/>
    <copy file="ejb-jar.xml" tofile="${assemble.projectejbjar}/META-INF/ejb-jar.xml" />
    <copy file="sun-ejb-jar.xml" tofile="${assemble.projectejbjar}/META-INF/sun-ejb-jar.xml" />
    <copy file="sun-cmp-mappings.xml" tofile="${assemble.projectejbjar}/META-INF/sun-cmp-mappings.xml" />
	<copy file="sql/${project.resource.prefix}_as7.dbschema" tofile="${assemble.projectejbjar}/${project.resource.prefix}_as7.dbschema" />
    <jar jarfile="../${projectejbjar}" manifest="MANIFEST_EJB.MF"
       basedir="${assemble.projectejbjar}" />
    <move file="../${projectejbjar}" todir="${assemble.projectejbjar}"/>
  </target>

<!--
	<copy file="../lib/xercesImpl.jar" todir="${assemble.ear}"/>
	-->

  <target name="create_ear" depends="clean_ear_common,jar,war,mkdir_ear">
    <copy file="${assemble.projectejbjar}/${projectejbjar}" todir="${assemble.ear}"/>
    <copy file="${assemble.projectwar}/${projectwar}" todir="${assemble.ear}"/>
	<copy file="../lib/oss_common-1_0-ri.jar" todir="${assemble.ear}"/>
	<copy file="../lib/ossjsa.jar" todir="${assemble.ear}"/>
	<copy file="${com.sun.aas.installRoot}/lib/ant/lib/xercesImpl.jar" todir="${assemble.ear}"/>
    <copy todir="${assemble.ear}/META-INF/">
      <fileset dir="." includes="${earDD}"/>
    </copy>
    <jar jarfile="${assemble.ear}/${ear}"
       basedir="${assemble.ear}" excludes="**/*.ear"/>
    <delete file="${assemble.ear}/${projectejbjar}" />
    <delete file="${assemble.ear}/${projectwar}" />
    <copy file="${assemble.ear}/${ear}" tofile="../${ear}"/>
  </target>


  <!-- ============================================================== -->
  <!--           JDBC Resource specific properties.                   -->
  <!-- ============================================================== -->
  <property name="project.resource.prefix" value="ossjsari" />
  <property name="conpool.name"       value="${project.resource.prefix}pool" />
  <property name="jdbc.resource.name" value="jdbc/${project.resource.prefix}" />

  <property name="pm.resource.name"   value="jdo/${project.resource.prefix}" />
  <property name="pm.factory.class"
				  value="com.sun.jdo.spi.persistence.support.sqlstore.impl.PersistenceManagerFactoryImpl" />

  <property name="db.user"  value="PBPUBLIC"/>
  <property name="db.pwd"   value="PBPUBLIC"/>
  <property name="ds.class" value="com.pointbase.xa.xaDataSource" />
  <property name="ds.type"	value="javax.sql.XADataSource" />
  <property name="db.file"  value="sql/${project.resource.prefix}_as7.sql"/>
  <property name="url.prop" value="databaseName" />

  <property name="db.host"  value="localhost"/>
  <property name="db.port"  value="9092"/>
  <property name="db.sid"   value="pointbase"/>
  <property name="db.url"   value="jdbc\:pointbase\:server\://${db.host}:${db.port}\/${db.sid}"/>

  <!-- ======================== -->
  <!--      JDBC Tagets         -->
  <!-- ======================== -->

  <target name="create-jdbc-connection-pool">
    <antcall target="admin_command_common">
      <param name="admin.command"
        value="create-jdbc-connection-pool
          --datasourceclassname ${ds.class}
		  --restype ${ds.type}
          ${conpool.name}" />
    </antcall>
    <antcall target="admin_command_common">
		<param name="admin.command"
			value="set server.resources.jdbc-connection-pool.${conpool.name}.property.user=${db.user}" />
    </antcall>
	<antcall target="admin_command_common">
	  <param name="admin.command"
		  value="set server.resources.jdbc-connection-pool.${conpool.name}.property.password=${db.pwd}" />
	</antcall>
	<antcall target="admin_command_common">
		<param name="admin.command"
			value="set server.resources.jdbc-connection-pool.${conpool.name}.property.databaseName=${db.url}" />
	</antcall>
</target>

  <target name="create-jdbc-resource">
    <antcall target="admin_command_common">
      <param name="admin.command"
        value="create-jdbc-resource
         --connectionpoolid ${conpool.name} 
		 ${jdbc.resource.name}" />
    </antcall>
  </target>

  <target name="create-persistence-resource">
    <antcall target="admin_command_common">
      <param name="admin.command"
        value="create-persistence-resource 
			--jdbcjndiname ${jdbc.resource.name} 
			--factoryclass ${pm.factory.class} 
			--enabled=true
		${pm.resource.name} " />
    </antcall>
  </target>


  <target name="delete-jdbc-connection-pool">
    <antcall target="admin_command_common">
      <param name="admin.command"
        value="delete-jdbc-connection-pool ${conpool.name} " />
    </antcall>
  </target>

  <target name="delete-jdbc-resource">
    <antcall target="admin_command_common">
      <param name="admin.command"
        value="delete-jdbc-resource ${jdbc.resource.name} " />
    </antcall>
  </target>
 
  <target name="delete-persistence-resource">
    <antcall target="admin_command_common">
      <param name="admin.command"
        value="delete-persistence-resource ${pm.resource.name} " />
    </antcall>
  </target>

  <!-- ============================================================== -->
  <!--            JMS Resource specific properties.                -->
  <!-- ============================================================== -->

  <property name="topic.factory.type" value="javax.jms.TopicConnectionFactory" />
  <property name="topic.factory.jndi.name" 
      value="System/System1/ApplicationType/ServiceActivation/Application/1-0;1-0-1;ReferenceImplementation/Comp/TopicConnectionFactory" />

  <property name="topic1.type" value="javax.jms.Topic" />
  <property name="topic1.jndi.name" 
      value="System/System1/ApplicationType/ServiceActivation/Application/1-0;1-0-1;ReferenceImplementation/Comp/JVTEventTopic" />

  <property name="topic1.destination" value="SaJvtEventTopic" />

  <property name="topic2.type" value="javax.jms.Topic" />
  <property name="topic2.jndi.name" 
      value="System/System1/ApplicationType/ServiceActivation/Application/1-0;1-0-1;ReferenceImplementation/Comp/XVTEventTopic" />

  <property name="topic2.destination" value="SaXvtEventTopic" />

  <property name="queue.factory.type" value="javax.jms.QueueConnectionFactory" />
  <property name="queue.factory.jndi.name" 
      value="System/System1/ApplicationType/ServiceActivation/Application/1-0;1-0-1;ReferenceImplementation/Comp/QueueConnectionFactory" />

  <property name="queue.type" value="javax.jms.Queue" />
  <property name="queue1.jndi.name" 
      value="System/System1/ApplicationType/ServiceActivation/Application/1-0;1-0-1;ReferenceImplementation/Comp/MessageQueue" />
  <property name="queue2.jndi.name" 
      value="System/System1/ApplicationType/ServiceActivation/Application/1-0;1-0-1;ReferenceImplementation/Comp/ResponseQueue" />

  <property name="queue1.destination" value="SaMessageQueue" />
  <property name="queue2.destination" value="SaResponseQueue" />

  <!-- ======================================================= -->
  <!--   JMS Targets                                        -->
  <!-- ======================================================= -->

  <target name="create-jms-resources" depends="init">
     <antcall target="create-jms-resource">
       <param name="jms.restype"         value="${topic.factory.type}" />
       <param name="jms.resource.name"   value="${topic.factory.jndi.name}" />
     </antcall>
     <antcall target="create-jms-resource">
       <param name="jms.restype"         value="${topic1.type}" />
       <param name="jms.resource.name"   
          value="--property imqDestinationName=${topic1.destination} ${topic1.jndi.name}" />
     </antcall>
     <antcall target="create-jms-resource">
       <param name="jms.restype"         value="${topic2.type}" />
       <param name="jms.resource.name"   
          value="--property imqDestinationName=${topic2.destination} ${topic2.jndi.name}" />
     </antcall>
     <antcall target="create-jms-resource">
       <param name="jms.restype"         value="${queue.factory.type}" />
       <param name="jms.resource.name"   value="${queue.factory.jndi.name}" />
     </antcall>
     <antcall target="create-jms-resource">
       <param name="jms.restype"         value="${queue.type}" />
       <param name="jms.resource.name"   
          value="--property imqDestinationName=${queue1.destination} ${queue1.jndi.name}" />
     </antcall>
     <antcall target="create-jms-resource">
       <param name="jms.restype"         value="${queue.type}" />
       <param name="jms.resource.name"   
          value="--property imqDestinationName=${queue2.destination} ${queue2.jndi.name}" />
     </antcall>
     <antcall target="create-jmsdest">
       <param name="jms.desttype"        value="queue" />
       <param name="jms.dest"            value="${queue1.destination}" />
     </antcall>
     <antcall target="create-jmsdest">
       <param name="jms.desttype"        value="queue" />
       <param name="jms.dest"            value="${queue2.destination}" />
     </antcall>
     <antcall target="create-jmsdest">
       <param name="jms.desttype"        value="topic" />
       <param name="jms.dest"            value="${topic1.destination}" />
     </antcall>
     <antcall target="create-jmsdest">
       <param name="jms.desttype"        value="topic" />
       <param name="jms.dest"            value="${topic2.destination}" />
     </antcall>
  </target>

  <target name="delete-jms-resources" depends="init">
      <antcall target="delete-jms-resource">
        <param name="jms.resource.name" value="${topic.factory.jndi.name}" />
      </antcall>
      <antcall target="delete-jms-resource">
        <param name="jms.resource.name" value="${topic1.jndi.name}" />
      </antcall>
      <antcall target="delete-jms-resource">
        <param name="jms.resource.name" value="${topic2.jndi.name}" />
      </antcall>
      <antcall target="delete-jms-resource">
        <param name="jms.resource.name" value="${queue.factory.jndi.name}" />
      </antcall>
      <antcall target="delete-jms-resource">
        <param name="jms.resource.name" value="${queue1.jndi.name}" />
      </antcall>
      <antcall target="delete-jms-resource">
        <param name="jms.resource.name" value="${queue2.jndi.name}" />
      </antcall>
      <antcall target="delete-jmsdest">
       <param name="jms.desttype"        value="queue" />
        <param name="jms.dest" value="${queue1.destination}" />
      </antcall>
      <antcall target="delete-jmsdest">
       <param name="jms.desttype"        value="queue" />
        <param name="jms.dest" value="${queue2.destination}" />
      </antcall>
      <antcall target="delete-jmsdest">
       <param name="jms.desttype"        value="topic" />
        <param name="jms.dest" value="${topic1.destination}" />
      </antcall>
      <antcall target="delete-jmsdest">
       <param name="jms.desttype"        value="topic" />
        <param name="jms.dest" value="${topic2.destination}" />
      </antcall>
  </target>

  <target name="create-jms-resource" depends="init">
    <sun-appserv-admin
      user="${admin.user}"
      password="${admin.password}"
      host="${admin.host}"
      port="${admin.port}"
      sunonehome="${com.sun.aas.installRoot}"
      command="create-jms-resource --restype ${jms.restype} --enabled=true ${jms.resource.name}"/>
  </target>

  <target name="delete-jms-resource" depends="init">
    <sun-appserv-admin
      user="${admin.user}"
      password="${admin.password}"
      host="${admin.host}"
      port="${admin.port}"
      sunonehome="${com.sun.aas.installRoot}"
      command="delete-jms-resource ${jms.resource.name}"/>
  </target>

  <target name="create-custom-resource" depends="init">
    <sun-appserv-admin
      user="${admin.user}"
      password="${admin.password}"
      host="${admin.host}"
      port="${admin.port}"
      sunonehome="${com.sun.aas.installRoot}"
      command="create-custom-resource --restype ${jms.restype} 
		--factoryclass com.sun.messaging.naming.TCFObjectFactory 
		--enabled=true 
		--property host=localhost:ackTimeout=30000:version=1.1:parm=\\\&quot;\\&quot;:subnet=0:securityPort=22000 
		${jms.resource.name}"/>
  </target>

  <target name="delete-custom-resource" depends="init">
    <sun-appserv-admin
      user="${admin.user}"
      password="${admin.password}"
      host="${admin.host}"
      port="${admin.port}"
      sunonehome="${com.sun.aas.installRoot}"
      command="delete-custom-resource ${jms.resource.name}"/>
  </target>

  <target name="create-jmsdest" depends="init">
    <sun-appserv-admin
      user="${admin.user}"
      password="${admin.password}"
      host="${admin.host}"
      port="${admin.port}"
      sunonehome="${com.sun.aas.installRoot}"
      command="create-jmsdest --desttype ${jms.desttype} ${jms.dest}"/>
  </target>

  <target name="delete-jmsdest" depends="init">
    <sun-appserv-admin
      user="${admin.user}"
      password="${admin.password}"
      host="${admin.host}"
      port="${admin.port}"
      sunonehome="${com.sun.aas.installRoot}"
      command="delete-jmsdest --desttype ${jms.desttype} ${jms.dest}"/>
  </target>

  <!-- ======================================================= -->
  <!--       SunONE AS set unset config                        -->
  <!-- ======================================================= -->
  <target name="setup" depends="setup_env">
    <antcall target="create-jdbc-connection-pool"/>
    <antcall target="create-jdbc-resource"/>
    <antcall target="create-persistence-resource"/>
    <antcall target="create-jms-resources"/>
    <antcall target="reconfig"/>
  </target>

  <target name="unsetup">
    <antcall target="delete-jdbc-resource"/>
    <antcall target="delete-jdbc-connection-pool"/>
    <antcall target="delete-persistence-resource"/>
    <antcall target="delete-jms-resources"/>
    <antcall target="reconfig"/>
  </target>

</project>
