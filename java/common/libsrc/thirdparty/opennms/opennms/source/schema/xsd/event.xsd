<?xml version="1.0"?>
<!-- target package ::= org.opennms.netmgmt.xml.event -->
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://xmlns.opennms.org/xsd/event">

	<element name="log">
		<complexType>
			<sequence>
				<element ref="header" minOccurs="0" maxOccurs="1"/>
				<element ref="events" minOccurs="1" maxOccurs="1"/>
			</sequence>
		</complexType>
	</element>

	<element name="header">
		<complexType>
			<sequence>
				<element name="ver" type="string" minOccurs="1" maxOccurs="1"/>
				<element name="dpName" type="string" minOccurs="1" maxOccurs="1"/>

				<!-- The time at which this log was generated. 
				 - The time is in the format generated by the java.text.DateFormat
				 - using the DateFormat.FULL style for the default locale
				 -
				 - For example, 
				 - Monday, February 18, 2002 3:01:58 PM EST
				 -->
				<element name="created" type="string" minOccurs="1" maxOccurs="1"/>
				<element name="mstation" type="string" minOccurs="1" maxOccurs="1"/>
			</sequence>
		</complexType>
	</element>

	<element name="events">
		<complexType>
			<sequence>
				<element ref="event" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>

	<element name="event">
		<complexType>
			<sequence>
				<!-- The event database id -->
				<element name="dbid" type="positiveInteger" minOccurs="0" maxOccurs="1"/>

				<element name="dist-poller" type="string" minOccurs="0" maxOccurs="1"/> <!-- from header -->

				<element name="creation-time" type="string" minOccurs="0" maxOccurs="1"/> <!-- from header -->

				<element name="master-station" type="string" minOccurs="0" maxOccurs="1"/> <!-- from header -->

				<!-- The event mask which helps to uniquely identify an event  -->
				<element ref="mask" minOccurs="0" maxOccurs="1"/>

				<!-- The Universal Event Identifier -->
				<element name="uei" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The generator of this event -->
				<element name="source" type="string" minOccurs="1" maxOccurs="1"/>

				<!-- The nodeid to which this event pertains -->
				<element name="nodeid" type="long" minOccurs="0" maxOccurs="1"/>

				<!-- The time at which this event was generated 
				 - The time is in the format generated by the java.text.DateFormat
				 - using the DateFormat.FULL style for the default locale
				 -
				 - For example, 
				 - Monday, February 18, 2002 3:01:58 PM EST
				 -->
				<element name="time" type="string" minOccurs="1" maxOccurs="1"/>

				<!-- The host at which the event is generated -->
				<element name="host" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The interface to which this event is pertinent -->
				<element name="interface" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The snmp host of the trap -->
				<element name="snmphost" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The service to which this event is pertinent -->
				<element name="service" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The snmp information from the trap -->
				<element ref="snmp" minOccurs="0" maxOccurs="1"/>

				<!-- The varbinds from the trap -->
				<element ref="parms" minOccurs="0" maxOccurs="1"/>

				<!-- The event description -->
				<element name="descr" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The event logmsg -->
				<element ref="logmsg" minOccurs="0" maxOccurs="1"/>

				<!-- The event severity -->
				<element name="severity" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The path outage information -->
				<element name="pathoutage" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The event correlation information -->
				<element ref="correlation" minOccurs="0" maxOccurs="1"/>

				<!-- The operator instruction for this event -->
				<element name="operinstruct" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The automatic action to occur when this event occurs -->
				<element ref="autoaction" minOccurs="0" maxOccurs="unbounded"/>

				<!-- The operator action to be taken  when this event occurs -->
				<element ref="operaction" minOccurs="0" maxOccurs="unbounded"/>

				<!-- The autoacknowledge information for the user -->
				<element ref="autoacknowledge" minOccurs="0" maxOccurs="1"/>

				<!-- A logical group with which to associate this event -->
				<element name="loggroup" type="string" minOcccurs="0" maxOccurs="unbounded"/>

				<!-- The trouble ticket info -->
				<element ref="tticket" minOccurs="0" maxOccurs="1"/>

				<!-- The forwarding information for this event -->
				<element ref="forward" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- The script information for this event -->
				<element ref="script" minOccurs="0" maxOccurs="unbounded"/>

				<!-- The ifIndex to which this event is pertinent -->
				<element name="ifIndex" type="string" minOccurs="0" maxOccurs="1"/>
								
				<!-- The ifAlias to which this event is pertinent -->
				<element name="ifAlias" type="string" minOccurs="0" maxOccurs="1"/>

				<!-- The text to be displayed on a 'mouseOver' event when this event is
     				     displayed in the event browser
				-->
				<element name="mouseovertext" type="string" minOccurs="0" maxOccurs="1"/>
			</sequence>
			<attribute name="uuid" type="string" use="optional"/>
		</complexType>
	</element>

	<element name="event-receipt">
		<complexType>
			<sequence>
				<element name="uuid" type="string" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>


	<!-- The Mask for event configuration: The mask contains one or more 'maskelements'
             which uniquely identify an event - can only include elements from the
             following subset: uei, source, host, snmphost, nodeid, interface, service, id(SNMP EID)
	                       specific, generic, community
	-->
	<element name="mask">
		<complexType>
			<sequence>
				<element ref="maskelement" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>
	
	<!-- The mask element -->
	<element name="maskelement">
		<complexType>
			<sequence>
				<!-- The mask element  name can only be one of those specified above -->
				<element name="mename" type="string" minOccurs="1" maxOccurs="1"/>

				<!-- The mask element value -->
				<element name="mevalue" type="string" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>

	<!-- The snmp information from the trap -->
	<element name="snmp">
		<complexType>
			<sequence>
				<!-- The snmp enterprise id -->
				<element name="id" type="string"
					minOccurs="1" maxOccurs="1"/>

				<!-- The snmp enterprise id text -->
				<element name="idtext" type="string"
					minOccurs="0" maxOccurs="1"/>

				<!-- The snmp version -->
				<element name="version" type="string"
					minOccurs="1" maxOccurs="1"/>

				<!-- The specific trap number -->
				<element name="specific" type="int"
					minOccurs="0" maxOccurs="1"/>

				<!-- The generic trap number -->
				<element name="generic" type="int"
					minOccurs="0" maxOccurs="1"/>

				<!-- The community name -->
				<element name="community" type="string"
					minOccurs="0" maxOccurs="1"/>
				
				<!-- The time stamp -->
				<element name="time-stamp" type="long"
					minOccurs="0" maxOccurs="1"/>
			</sequence>
		</complexType>
	</element>

	<!-- The varbinds from the trap -->
	<element name="parms">
		<complexType>
			<sequence>
				<element ref="parm" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>

	<!-- A varbind from the trap -->
	<element name="parm">
		<complexType>
			<sequence>
				<!-- parm name -->
				<element name="parmName" type="string" minOccurs="1" maxOccurs="1"/>

				<!-- parm value -->
				<element ref="value" minOccurs="1" maxOccurs="1"/>
			</sequence>
		</complexType>
	</element>

	<!-- parm value -->
	<element name="value">
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="type" use="optional" type="string" default="string">
						<simpleType>
							<restriction base="string">
								<pattern value="(int|string|Int32|OctetString|Null|ObjectIdentifier|Sequence|IpAddress|Counter32|Gauge32|TimeTicks|Opaque|Counter64)"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="encoding" use="optional" type="string" default="text">
						<simpleType>
							<restriction base="string">
								<pattern value="(text|base64)"/>
							</restriction>
						</simpleType>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<!-- The event logmsg with the destination attribute defining if event is for display only,
	     logonly, log and display or neither.  
	     A destination attribute of 'donotpersist' indicates that Eventd is not to persist
             the event to the database.  -->
	<element name="logmsg">
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="dest"
						use="optional"
						type="string"
						default="logndisplay">
						<simpleType>
							<restriction base="string">
								<pattern value="(logndisplay|displayonly|logonly|suppress|donotpersist)"/>
							</restriction>
						</simpleType>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<!-- The event correlation information -->
	<element name="correlation">
		<complexType>
			<sequence>
				<!-- A cancelling UEI for this event -->
				<element name="cuei" type="string"
					minOccurs="0" maxOccurs="unbounded"/>

				<!-- The minimum count for this event -->
				<element name="cmin" type="string"
					minOccurs="0" maxOccurs="1"/>
				
				<!-- The maximum count for this event -->
				<element name="cmax" type="string"
					minOccurs="0" maxOccurs="1"/>

				<!-- The correlation time for this event -->
				<element name="ctime" type="string"
					minOccurs="0" maxOccurs="1"/>
			</sequence>
			<!-- The state determines if event is correlated -->
			<attribute name="state"
				use="optional"
				type="string"
				default="off">
				<simpleType>
					<restriction base="string">
						<pattern value="(on|off)"/>
					</restriction>
				</simpleType>
			</attribute>
			<!-- The correlation path -->
			<attribute name="path"
				use="optional"
				type="string"
				default="suppressDuplicates">
				<simpleType>
					<restriction base="string">
						<pattern value="(suppressDuplicates|cancellingEvent|suppressAndCancel|pathOutage)"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>

	<!-- The automatic action to occur when this event occurs with state controlling if action takes place -->
	<element name="autoaction">
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="state"
						use="optional"
						type="string"
						default="on">
						<simpleType>
							<restriction base="string">
								<pattern value="(on|off)"/>
							</restriction>
						</simpleType>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<!-- The operator action to be taken  when this event occurs with state controlling
	     if action takes place. The menutext gets displayed in the UI -->
	<element name="operaction">
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="state"
						use="optional"
						type="string"
						default="on">
						<simpleType>
							<restriction base="string">
								<pattern value="(on|off)"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="menutext"
						type="string"
						use="required"/>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<!-- The autoacknowledge information for the user with state controlling if event is marked
	     acknoledged when inserted into the database -->
	<element name="autoacknowledge">
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="state"
						use="optional"
						type="string"
						default="on">
						<simpleType>
							<restriction base="string">
								<pattern value="(on|off)"/>
							</restriction>
						</simpleType>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<!-- The trouble ticket info with state on/off determining if action is taken on the trouble ticket -->
	<element name="tticket">
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="state"
						use="optional"
						type="string"
						default="on">
						<simpleType>
							<restriction base="string">
								<pattern value="(on|off)"/>
							</restriction>
						</simpleType>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<!-- The forwarding information for this event - state determines if event is forwarded,
	     mechanism determines how event is forwarded -->
	<element name="forward">
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="state"
						use="optional"
						type="string"
						default="off">
						<simpleType>
							<restriction base="string">
								<pattern value="(on|off)"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="mechanism"
						use="optional"
						type="string"
						default="snmpudp">
						<simpleType>
							<restriction base="string">
								<pattern value="(snmpudp|snmptcp|xmltcp|xmludp)"/>
							</restriction>
						</simpleType>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<!-- The script information for this event - describes a script to be executed
		whenever the event occurs -->
	<element name="script">
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="language" type="string" use="required"/>
				</extension>
			</simpleContent>
		</complexType>
	</element>

</schema>

