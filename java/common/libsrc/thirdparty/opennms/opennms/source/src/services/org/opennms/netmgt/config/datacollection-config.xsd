<?xml version="1.0"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://xmlns.opennms.org/xsd/config/collectd">

	<element name="datacollection-config">
		<complexType>
			<sequence>
				<!-- SNMP data collection element -->
				<element ref="snmp-collection" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
			<!-- full path to the RRD repository for collected SNMP data -->
			<attribute name="rrdRepository" type="string" use="required"/>
		</complexType>
	</element>

	<!-- a grouping of SNMP related RRD parms, MIB object groups and sysoid based
		 system definitions. 
	-->
	<element name="snmp-collection">
		<complexType>
			<sequence>
				<!-- RRD parms -->
				<element ref="rrd" minOccurs="1" maxOccurs="1"/>
				
				<!-- MIB object groups -->
				<element ref="groups" minOccurs="1" maxOccurs="1"/>
				
				<!-- sysOid-based sytems -->
				<element ref="systems" minOccurs="1" maxOccurs="1"/>
			</sequence>
			<!-- collector name -->
			<attribute name="name" type="string" use="required"/>
			
			<!-- Specifies the maximum number of variables that may be 
			     encoded into an individual SNMP pdu request by Collectd
			     Provides a means to limit the size of outgoing PDU requests.
			     Value of 0 indicates no limit on number of PDUs which
			     can be encoded into a single PDU.
			-->
			<attribute name="maxVarsPerPdu" type="integer" use="required"/>
			
			<!-- indicates if collected SNMP data is to be stored for 
				 "all" interfaces or only for the "primary" interface.
			-->
			<attribute name="snmpStorageFlag" type="string" use="required">
				<simpleType>
					<restriction base="string">
						<pattern value="(all|primary|select)"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>

	<!-- RRD parms -->
	<element name="rrd">
		<complexType>
			<sequence>
				<!-- Round Robin Archive definitions -->
				<element name="rra" type="string" minOccurs="1" maxOccurs="unbounded">
					<simpleType>
						<restriction base="string">
							<pattern value="^RRA:(AVERAGE|MIN|MAX|LAST):.*$"/>
						</restriction>
					</simpleType>
				</element>
			</sequence>
			
			<!-- step size for the RRD -->
			<attribute name="step" type="integer" use="required"/>
		</complexType>
	</element>

	<!-- MIB object groups -->
	<element name="groups">
		<complexType>
			<sequence>
				<!-- a MIB object group -->
				<element ref="group" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>

	<!-- a MIB object group -->
	<element name="group">
		<complexType>
			<sequence>
				<!-- a MIB object -->
				<element ref="mibObj" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- sub group -->
				<element name="includeGroup" type="string" minOccurs="0" maxOccurs="unbounded"/>
			</sequence>
			
			<!-- group name -->
			<attribute name="name" type="string" use="required"/>
			
			<!-- interface type
				
				 Indicates the interface types from which the groups MIB objects 
				 are to be collected.  Supports individual ifType values or comma
				 separated list of ifType values in addition to "all" and "ignore
				 key words.
				 
				 For example:
				 
				 "6"  		indicates that OIDs from this MIB group are to be collected
								only for ethernet interfaces (ifType = 6)
				 "6,22"		indicates that OIDs from this MIB group are to be collected
								only for ethernet and serial interfaces
				 "all" 		indicates that the OIDs from this MIB group are to be
							collected for all interfaces regardless of ifType
				"ignore" 	indicates that OIDs from this MIB group are node-level
							objects
								
				Sample ifType descriptions/values:
				(Refer to http://www.iana.org/assignments/ianaiftype-mib for a 
				comprehensive list.)
				
					ethernetCsmacd			6
					iso8825TokenRing		9
					fddi				15
					sdlc				17
					basicISDN			20
					primaryISDN			21
					propPointToPointSerial		22
					ppp				23
					atm				37
					sonet				39
					opticalChannel			195
			-->
			<attribute name="ifType" type="string" use="required">
				<simpleType>
					<restriction base="string">
						<pattern value="^(all|ignore|(\d+,)*\d+)$"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>

	<!-- systems -->
	<element name="systems">
		<complexType>
			<sequence>
				<!-- list of system definitions -->
				<element ref="systemDef" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>

	<!-- system definition -->
	<element name="systemDef">
		<complexType>
			<sequence>
				<choice>
					<!-- system object identifier (sysoid) which uniquely identifies
					     the system.
					-->
					<element name="sysoid" type="string" minOccurs="1" maxOccurs="1"/>
					
					<!-- sysoid mask which can be used to match multiple systems -->
					<element name="sysoidMask" type="string" minOccurs="1" maxOccurs="1"/>
				</choice>
				
				<!-- list of IP address or IP address mask values to which this 
				     system definition applies.
				-->
				<element ref="ipList" minOccurs="0" maxOccurs="1"/>
				
				<!-- container for list of MIB groups to be collected for the system -->
				<element ref="collect" minOccurs="1" maxOccurs="1"/>
			</sequence>
			<attribute name="name" type="string" use="required"/>	
		</complexType>
	</element>

	<!-- list of IP address or IP address mask values to which this system 
		 definition applies.
	-->
	<element name="ipList">
		<complexType>
			<sequence>
				<!-- List of IP addresses -->
				<element name="ipAddr" type="string" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- List of IP address masks -->
				<element name="ipAddrMask" type="string" minOccurs="0" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>

	<!-- container for list of MIB groups to be collected for the system -->
	<element name="collect">
		<complexType>
			<sequence>
				<element name="includeGroup" type="string" minOccurs="0" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>

	<!-- a MIB object -->
	<element name="mibObj">
		<complexType>
			<!-- object identifier -->
			<attribute name="oid" type="string" use="required"/>
			
			<!-- instance identifier 
			
				 Only valid instance identifier values are a positive integer
				 value or the keyword "ifIndex" which indicates that the ifIndex
				 of the interface is to be substituted for the instance value for each
				 interface the oid is retrieved for.
			-->
			<attribute name="instance" type="string" use="required"/>
			
			<!-- a human readable name for the object (such as "ifOctetsIn")
			
				 NOTE:  This value is used as the RRD file name and data source
						name.  RRD only supports data source names up to 19 chars 
						in length.  If the SNMP data collector encounters an alias
						which exceeds 19 characters it will be truncated.
			-->
			<attribute name="alias" type="string" use="required"/>
			
			<!-- SNMP data type
			
				 SNMP supported types: counter, gauge, timeticks, integer, octetstring, string
				 The SNMP type is mapped to one of two RRD supported data types
				 COUNTER or GAUGE, or the string.properties file.  The mapping is as follows:
				 
					SNMP counter -> RRD COUNTER
					SNMP gauge, timeticks, integer, octetstring -> RRD GAUGE
					SNMP string -> String properties file
			-->
			<attribute name="type" type="string" use="required">
				<simpleType>
					<restriction base="string">
						<pattern value="^([Cc](ounter|OUNTER)(32|64)?|[Gg](auge|UAGE)(32|64)?|[Tt](ime|IME)[Tt](icks|ICKS)|[Ii](nteger|NTEGER)(32|64)?|[Oo](ctet|CTET)[Ss](tring|TRING))|[Ss](tring|TRING)$"/>
					</restriction>
				</simpleType>
			</attribute>
			
			<!-- Maximum Value
			
				 In order to correctly manage counter wraps, it is possible 
				 to add a maximum value for a collection. For example, a 32-bit
				 counter would have a max value of 4294967295.
			-->
			<attribute name="maxval" type="string" use="optional"/>
			
			<!-- Minimum Value
			
				 For completeness, adding the ability to use a minimum value.
			-->
			<attribute name="minval" type="string" use="optional"/>
		</complexType>
	</element>
</schema>
