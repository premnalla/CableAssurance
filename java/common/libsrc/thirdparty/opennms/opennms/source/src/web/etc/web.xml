<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">


<web-app>
  <context-param>
    <param-name>opennms.home</param-name>
    <param-value>@install.dir@/</param-value>
  </context-param>
  
  <!-- Set this for JRobin graphs and Availablity Reporting -->
  <context-param>
  	<param-name>java.awt.headless</param-name>
  	<param-value>true</param-value>
  </context-param>
  
  <!-- Database parameters -->  
  <context-param>
    <param-name>opennms.db.poolman</param-name>
    <param-value>org.opennms.core.resource.db.SimpleDbConnectionFactory</param-value>
  </context-param>
  <context-param>
    <param-name>opennms.db.driver</param-name>
    <param-value>@install.database.driver@</param-value>
  </context-param>
  <context-param>
    <param-name>opennms.db.url</param-name>
    <param-value>@install.database.url@@install.database.name@?compatible=7.1</param-value>
  </context-param>
  <context-param>
    <param-name>opennms.db.user</param-name>
    <param-value>@install.database.user@</param-value>
  </context-param>
  <context-param>
    <param-name>opennms.db.password</param-name>
    <param-value>@install.database.password@</param-value>
  </context-param>

  
  <!-- RTC Subscription parameters -->  
  <context-param>
    <param-name>opennms.rtc-client.http-post.username</param-name>
    <param-value>rtc</param-value>
    <description>The username the RTC uses when authenticating itself in an HTTP POST.</description>
  </context-param>
  <context-param>
    <param-name>opennms.rtc-client.http-post.password</param-name>
    <param-value>rtc</param-value>
    <description>The password the RTC uses when authenticating itself in an HTTP POST.</description>
  </context-param>
  <context-param>
    <param-name>opennms.rtc-client.http-post.base-url</param-name>
    <param-value>http://localhost:8080/opennms/rtc/post</param-value>
    <description>
      The base of a URL that RTC clients use when creating a RTC subscription URL. 
      IMPORTANT: This URL must NOT contain a slash at the end.       
    </description>
  </context-param>
  
  <filter>
    <filter-name>AddRefreshHeader-300</filter-name>
    <description>Adds the refresh HTTP header to a servlet's or JSP's output so it will be automatically reloaded.</description>
    <filter-class>org.opennms.web.AddRefreshHeaderFilter</filter-class>
    <init-param>
      <param-name>seconds</param-name>
      <param-value>300</param-value>
      <description>This parameter specifies how often to refresh the page.</description>
    </init-param>
  </filter>

  <filter>
    <filter-name>AddRefreshHeader-120</filter-name>
    <description>Adds the refresh HTTP header to a servlet's or JSP's output so it will be automatically reloaded.</description>
    <filter-class>org.opennms.web.AddRefreshHeaderFilter</filter-class>
    <init-param>
      <param-name>seconds</param-name>
      <param-value>120</param-value>
      <description>This parameter specifies how often to refresh the page.</description>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/index.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/rtc/category.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/node.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/interface.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/service.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/outage/current.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-120</filter-name>
    <url-pattern>/event/list</url-pattern>
  </filter-mapping>

  <listener>
    <!-- This listener handles our custom startup/shutdown behavior. -->
    <listener-class>org.opennms.web.InitializerServletContextListener</listener-class>
  </listener>

  <!-- desktop survey report servlet -->  
  
  <servlet>
    <!-- This servlet creates the graph images using RRDTool. -->
    <servlet-name>snmpGraph</servlet-name>
    <servlet-class>org.opennms.web.graph.RRDGraphServlet</servlet-class>
    <init-param>
      <param-name>rrd-properties</param-name>
      <param-value>etc/snmp-graph.properties</param-value>
    </init-param>
  </servlet>
  
  <servlet>
    <!-- This servlet creates ad hoc graph images using RRDTool. -->
    <servlet-name>snmpAdHocGraph</servlet-name>
    <servlet-class>org.opennms.web.graph.RRDAdHocGraphServlet</servlet-class>
    <init-param>
      <param-name>rrd-properties</param-name>
      <param-value>etc/snmp-adhoc-graph.properties</param-value>
    </init-param>
  </servlet>  

  <servlet>
    <!-- This servlet creates the graph images using RRDTool. -->
    <servlet-name>rtGraph</servlet-name>
    <servlet-class>org.opennms.web.graph.RRDGraphServlet</servlet-class>
    <init-param>
      <param-name>rrd-properties</param-name>
      <param-value>etc/response-graph.properties</param-value>
    </init-param>
  </servlet>

  <servlet>
    <!-- This servlet creates ad hoc graph images using RRDTool. -->
    <servlet-name>rtAdHocGraph</servlet-name>
    <servlet-class>org.opennms.web.graph.RRDAdHocGraphServlet</servlet-class>
    <init-param>
      <param-name>rrd-properties</param-name>
      <param-value>etc/response-adhoc-graph.properties</param-value>
    </init-param>
  </servlet>

  
  <servlet>
    <!-- This servlet dumps out XML using RRDTool. -->
    <servlet-name>rrddump</servlet-name>
    <servlet-class>org.opennms.web.performance.RRDDumpServlet</servlet-class>
    <init-param>
      <param-name>rrd-directory</param-name>
      <param-value>@install.share.dir@/rrd/snmp/</param-value>
    </init-param>
    <init-param>
      <param-name>rrd-dump-command</param-name>
      <param-value>@install.rrdtool.bin@ dump</param-value>
    </init-param>    
  </servlet>
  <servlet>
    <!-- This servlet creates a text file with one line for each RRD filename. -->
    <servlet-name>rrdlist</servlet-name>
    <servlet-class>org.opennms.web.performance.RRDListServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>addPerfReportsToUrl</servlet-name>
    <servlet-class>org.opennms.web.performance.AddReportsToUrlServlet</servlet-class>
  </servlet>  
  <servlet>
    <servlet-name>addIntfToPerfUrl</servlet-name>
    <servlet-class>org.opennms.web.performance.AddInterfaceToURLServlet</servlet-class>
    <init-param>
      <param-name>chooseInterfaceUrl</param-name>
      <param-value>chooseinterface.jsp</param-value>
      <description>Redirect to this sibling URL when more than one RRD matches a node.</description>      
    </init-param>
  </servlet>  

  <servlet>
    <!-- This servlet dumps out XML using RRDTool. -->
    <servlet-name>rt-rrddump</servlet-name>
    <servlet-class>org.opennms.web.response.RRDDumpServlet</servlet-class>
    <init-param>
      <param-name>rt-rrd-directory</param-name>
      <param-value>@install.share.dir@/rrd/snmp/</param-value>
    </init-param>
    <init-param>
      <param-name>rt-rrd-dump-command</param-name>
      <param-value>@install.rrdtool.bin@ dump</param-value>
    </init-param>
  </servlet>
  <servlet>
    <!-- This servlet creates a text file with one line for each RRD filename. -->
    <servlet-name>rt-rrdlist</servlet-name>
    <servlet-class>org.opennms.web.response.RRDListServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>rt-addPerfReportsToUrl</servlet-name>
    <servlet-class>org.opennms.web.response.AddReportsToUrlServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>rt-addIntfToPerfUrl</servlet-name>
    <servlet-class>org.opennms.web.response.AddInterfaceToURLServlet</servlet-class>
    <init-param>
      <param-name>rt-chooseInterfaceUrl</param-name>
      <param-value>chooseinterface.jsp</param-value>
      <description>Redirect to this sibling URL when more than one RRD matches a node.</description>
    </init-param>
  </servlet>

    
  <servlet>
    <!-- This servlet creates availability reports. -->
    <servlet-name>availabilityXml</servlet-name>
    <servlet-class>org.opennms.web.availability.raw.RawAvailabilityServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- This servlet creates availability reports. -->
    <servlet-name>availability</servlet-name>
    <servlet-class>org.opennms.web.availability.AvailabilityServlet</servlet-class>
    <init-param>
      <param-name>report.logo</param-name>
      <param-value>@install.servlet.dir@/images/logo.gif</param-value>
    </init-param>
    <init-param>
      <param-name>xslt.filename</param-name>
      <param-value>etc/AvailabilityReports.xsl</param-value>
    </init-param>
    <init-param>
      <param-name>pdf.xslt.filename</param-name>
      <param-value>etc/PDFAvailReport.xsl</param-value>
    </init-param>
    <init-param>
      <param-name>svg.xslt.filename</param-name>
      <param-value>etc/SVGAvailReport.xsl</param-value>
    </init-param>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>reportgenerating.jsp</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
    <init-param>
      <param-name>redirect.failure</param-name>
      <param-value>reportfailed.jsp</param-value>
      <description>Redirect to this sibling URL on failure.</description>
    </init-param>
    <init-param>
      <param-name>redirect.noEmail</param-name>
      <param-value>noemail.jsp</param-value>
      <description>Redirect to this sibling URL if the user doesn't have an email address setup.</description>
    </init-param>
    <init-param>
      <param-name>script.generateReport</param-name>
      <param-value>@install.bin.dir@/report.sh</param-value>
      <description>Use this script to generate an Availability report on the command line.</description>
    </init-param>
    <init-param>
      <param-name>script.mailReport</param-name>
      <param-value>@install.bin.dir@/webreport.pl</param-value>
      <description>Use this script to mail a file to a user from the command line.</description>
    </init-param>
    <init-param>
      <param-name>script.useScript</param-name>
      <param-value>false</param-value>
      <description>Set this to false to use the JavaMailer class instead of the script set in script.mailReport.</description>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>acknowledgeEvent</servlet-name>
    <servlet-class>org.opennms.web.event.AcknowledgeEventServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>list</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>acknowledgeEventByFilter</servlet-name>
    <servlet-class>org.opennms.web.event.AcknowledgeEventByFilterServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>list</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>acknowledgeNotice</servlet-name>
    <servlet-class>org.opennms.web.notification.AcknowledgeNoticeServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>browse</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>importAssets</servlet-name>
    <servlet-class>org.opennms.web.asset.ImportAssetsServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value><![CDATA[../../asset/nodelist.jsp?column=address1&searchvalue=]]></param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>exportAssets</servlet-name>
    <servlet-class>org.opennms.web.asset.ExportAssetsServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>modifyAsset</servlet-name>
    <servlet-class>org.opennms.web.asset.ModifyAssetServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>list</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>filterEvent</servlet-name>
    <servlet-class>org.opennms.web.event.EventFilterServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>queryEvent</servlet-name>
    <servlet-class>org.opennms.web.event.EventQueryServlet</servlet-class>
    <init-param>
      <param-name>redirect.url</param-name>
      <param-value>list</param-value>
      <description>Redirect to this sibling URL after changing the parameter set.</description>
    </init-param>    
  </servlet>
  <servlet>
    <servlet-name>filterVulnerability</servlet-name>
    <servlet-class>org.opennms.web.vulnerability.VulnerabilityFilterServlet</servlet-class>
  </servlet>  
  
  
  <servlet>
    <servlet-name>queryNotice</servlet-name>
    <servlet-class>org.opennms.web.notification.NoticeQueryServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>queryOutage</servlet-name>
    <servlet-class>org.opennms.web.outage.OutageQueryServlet</servlet-class>
  </servlet>
  
  <!-- Servlet for updating the notification status -->
  <servlet>
    <servlet-name>updateNotificationStatus</servlet-name>
    <servlet-class>org.opennms.web.admin.notification.UpdateNotifdStatusServlet</servlet-class>
  </servlet>
  
  <!-- Servlet for building destination paths from a wizard -->
  <servlet>
    <servlet-name>destinationWizard</servlet-name>
    <servlet-class>org.opennms.web.admin.notification.DestinationWizardServlet</servlet-class>
  </servlet>
  
  <!-- Servlet for building notifications from a wizard -->
  <servlet>
    <servlet-name>notificationWizard</servlet-name>
    <servlet-class>org.opennms.web.admin.notification.noticeWizard.NotificationWizardServlet</servlet-class>
  </servlet>
  
  <!-- Servlets for configuration of users groups and views -->
  <servlet>
    <!-- servlet for passing parameters to the user modify jsp -->
    <servlet-name>modifyUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.ModifyUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating the local user info during modification-->
    <servlet-name>updateUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.UpdateUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving the local user info during modification-->
    <servlet-name>saveUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.SaveUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for renaming the local user info during modification-->
    <servlet-name>renameUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.RenameUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new user-->
    <servlet-name>addNewUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.AddNewUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting a user-->
    <servlet-name>deleteUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.DeleteUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding duty schedules to a user's notification info-->
    <servlet-name>addDutySchedules</servlet-name>
    <servlet-class>org.opennms.web.admin.users.AddDutySchedulesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for removing duty schedules from a user's notification info-->
    <servlet-name>removeDutySchedules</servlet-name>
    <servlet-class>org.opennms.web.admin.users.RemoveDutySchedulesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding duty schedules to a group's notification info-->
    <servlet-name>addGroupDutySchedules</servlet-name>
    <servlet-class>org.opennms.web.admin.groups.AddGroupDutySchedulesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for removing duty schedules from a group's notification info-->
    <servlet-name>removeGroupDutySchedules</servlet-name>
    <servlet-class>org.opennms.web.admin.groups.RemoveGroupDutySchedulesServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for passing parameters to the group modify jsp -->
    <servlet-name>modifyGroup</servlet-name>
    <servlet-class>org.opennms.web.admin.groups.ModifyGroupServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating the local group info during modification-->
    <servlet-name>updateGroup</servlet-name>
    <servlet-class>org.opennms.web.admin.groups.UpdateGroupServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving the local group info during modification-->
    <servlet-name>saveGroup</servlet-name>
    <servlet-class>org.opennms.web.admin.groups.SaveGroupServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for renaming the local group info during modification-->
    <servlet-name>renameGroup</servlet-name>
    <servlet-class>org.opennms.web.admin.groups.RenameGroupServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new group-->
    <servlet-name>addNewGroup</servlet-name>
    <servlet-class>org.opennms.web.admin.groups.AddNewGroupServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting a group-->
    <servlet-name>deleteGroup</servlet-name>
    <servlet-class>org.opennms.web.admin.groups.DeleteGroupServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for passing parameters to the view modify jsp -->
    <servlet-name>modifyView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.ModifyViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating the local view info during modification-->
    <servlet-name>updateView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.UpdateViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving the local view info during modification-->
    <servlet-name>saveView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.SaveViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for renaming the local view info during modification-->
    <servlet-name>renameView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.RenameViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new view-->
    <servlet-name>addNewView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.AddNewViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting a view-->
    <servlet-name>deleteView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.DeleteViewServlet</servlet-class>
  </servlet>
  
  <!-- Servlets for the editing of the eventconf.xml file -->
  <servlet>
    <servlet-name>deleteEvent</servlet-name>
    <servlet-class>org.opennms.web.eventconf.DeleteEventServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>index.jsp</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
  </servlet>
  
  <servlet>
    <!-- servlet for passing parameters to the event conf modify jsp -->
    <servlet-name>modifyParam</servlet-name>
    <servlet-class>org.opennms.web.eventconf.ModifyParamServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving an event -->
    <servlet-name>saveEvent</servlet-name>
    <servlet-class>org.opennms.web.eventconf.SaveEventServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating changes to the mask elements of an event conf -->
    <servlet-name>updateEvent</servlet-name>
    <servlet-class>org.opennms.web.eventconf.UpdateEventServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for renaming an event -->
    <servlet-name>renameEvent</servlet-name>
    <servlet-class>org.opennms.web.eventconf.RenameEventServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for creating a new event -->
    <servlet-name>newEvent</servlet-name>
    <servlet-class>org.opennms.web.eventconf.NewEventServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for copying event -->
    <servlet-name>copyEvent</servlet-name>
    <servlet-class>org.opennms.web.eventconf.CopyEventServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for rearranging event configurations -->
    <servlet-name>rearrangeEvents</servlet-name>
    <servlet-class>org.opennms.web.eventconf.RearrangeEventsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new mask element when editing event conf masks -->
    <servlet-name>newMaskElement</servlet-name>
    <servlet-class>org.opennms.web.eventconf.masks.NewMaskElementServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating changes to the mask elements of an event conf -->
    <servlet-name>updateMaskElements</servlet-name>
    <servlet-class>org.opennms.web.eventconf.masks.UpdateMaskElementsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving changes to the mask elements of an event conf -->
    <servlet-name>saveMaskElements</servlet-name>
    <servlet-class>org.opennms.web.eventconf.masks.SaveMaskElementsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting mask elements of an event conf -->
    <servlet-name>deleteElement</servlet-name>
    <servlet-class>org.opennms.web.eventconf.masks.DeleteElementServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for intializing parameters for editing an event mask-->
    <servlet-name>maskEditing</servlet-name>
    <servlet-class>org.opennms.web.eventconf.masks.MaskEditingServlet</servlet-class>
  </servlet> 
  <servlet>
    <!-- servlet for intializing parameters for editing the event auto actions-->
    <servlet-name>autoActionEditing</servlet-name>
    <servlet-class>org.opennms.web.eventconf.autoActions.AutoActionEditingServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new auto action to an event -->
    <servlet-name>newAutoAction</servlet-name>
    <servlet-class>org.opennms.web.eventconf.autoActions.NewAutoActionServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating changes to the mask elements of an event conf -->
    <servlet-name>updateAutoActions</servlet-name>
    <servlet-class>org.opennms.web.eventconf.autoActions.UpdateAutoActionsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving changes to the mask elements of an event conf -->
    <servlet-name>saveAutoActions</servlet-name>
    <servlet-class>org.opennms.web.eventconf.autoActions.SaveAutoActionsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting mask elements of an event conf -->
    <servlet-name>deleteAutoAction</servlet-name>
    <servlet-class>org.opennms.web.eventconf.autoActions.DeleteAutoActionServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for intializing parameters for editing the event operator actions-->
    <servlet-name>operActionEditing</servlet-name>
    <servlet-class>org.opennms.web.eventconf.operActions.OperActionEditingServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new operator action to an event -->
    <servlet-name>newOperAction</servlet-name>
    <servlet-class>org.opennms.web.eventconf.operActions.NewOperActionServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating changes to operator actions -->
    <servlet-name>updateOperActions</servlet-name>
    <servlet-class>org.opennms.web.eventconf.operActions.UpdateOperActionsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving changes to operator actions -->
    <servlet-name>saveOperActions</servlet-name>
    <servlet-class>org.opennms.web.eventconf.operActions.SaveOperActionsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting operator actions -->
    <servlet-name>deleteOperAction</servlet-name>
    <servlet-class>org.opennms.web.eventconf.operActions.DeleteOperActionServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for intializing parameters for editing the event forwards-->
    <servlet-name>forwardsEditing</servlet-name>
    <servlet-class>org.opennms.web.eventconf.forwards.ForwardsEditingServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new operator action to an event -->
    <servlet-name>newForward</servlet-name>
    <servlet-class>org.opennms.web.eventconf.forwards.NewForwardServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating changes to operator actions -->
    <servlet-name>updateForwards</servlet-name>
    <servlet-class>org.opennms.web.eventconf.forwards.UpdateForwardsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving changes to operator actions -->
    <servlet-name>saveForwards</servlet-name>
    <servlet-class>org.opennms.web.eventconf.forwards.SaveForwardsServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting operator actions -->
    <servlet-name>deleteForward</servlet-name>
    <servlet-class>org.opennms.web.eventconf.forwards.DeleteForwardServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>nodeLabelChange</servlet-name>
    <servlet-class>org.opennms.web.nodelabel.NodeLabelChangeServlet</servlet-class>
  </servlet>

  <servlet>
    <!-- servlet for grabbing node information -->
    <servlet-name>deleteSelNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.DeleteNodesServlet</servlet-class>
  </servlet>
  <servlet>
     <servlet-name>deleteInterface</servlet-name>
     <servlet-class>org.opennms.web.admin.nodeManagement.DeleteInterfaceServlet</servlet-class>
  </servlet>
  <servlet>
     <servlet-name>deleteService</servlet-name>
     <servlet-class>org.opennms.web.admin.nodeManagement.DeleteServiceServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing interfaces and services on a node -->
    <servlet-name>getInterfaces</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.GetInterfacesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new interface -->
    <servlet-name>addNewInterface</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.AddNewInterfaceServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting nodes -->
    <servlet-name>deleteNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.DeleteGetNodesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing SNMP node information -->
    <servlet-name>snmpGetNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SnmpGetNodesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing SNMP interface information -->
    <servlet-name>snmpGetInterfaces</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SnmpGetInterfacesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing node, interface and service information -->
    <servlet-name>getNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.GetNodesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for managing and unmanaging interfaces and services -->
    <servlet-name>manageNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.ManageNodesServlet</servlet-class>
  </servlet>
  <servlet>
     <!-- servlet for managing/unmanaging interfaces and services for a single node -->
     <servlet-name>manageNode</servlet-name>
     <servlet-class>org.opennms.web.admin.nodeManagement.ManageNodeServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for managing and unmanaging interfaces and services -->
    <servlet-name>snmpManageNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SnmpManageNodesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for configuring SNMP parameters -->
    <servlet-name>snmpConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SnmpConfigServlet</servlet-class>
  </servlet>
  
  <!-- servlets for editing the poller configuration files -->
  <servlet>
    <servlet-name>pollerConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.pollerConfig.PollerConfigServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>finishPollerConfig.jsp</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>finishPollerConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.pollerConfig.FinishPollerConfigServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for managing and unmanaging interfaces and services -->
    <servlet-name>addPollerConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.pollerConfig.AddPollerConfigServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>index.jsp</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
  </servlet>

  <!--servlet for updating the notify flag in the ifservices table -->
  <servlet>
        <servlet-name>updateServiceNotify</servlet-name>
        <servlet-class>org.opennms.web.admin.notification.ServiceNoticeUpdateServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>rtcPost</servlet-name>
    <servlet-class>org.opennms.web.category.RTCPostServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>rtcRaw</servlet-name>
    <servlet-class>org.opennms.web.category.RTCDebugServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>sendMail</servlet-name>
    <servlet-class>org.opennms.web.mail.MailerServlet</servlet-class>
    <init-param>
      <param-name>redirect.success</param-name>
      <param-value>../help/index.jsp</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>
    <init-param>
      <param-name>mail.program</param-name>
      <param-value>/bin/mail</param-value>
      <description>Redirect to this sibling URL on success.</description>
    </init-param>    
  </servlet>

  <servlet>
    <servlet-name>nodeRescan</servlet-name>
    <servlet-class>org.opennms.web.element.NodeRescanServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>filterOutage</servlet-name>
    <servlet-class>org.opennms.web.outage.OutageFilterServlet</servlet-class>
  </servlet>

  <servlet>
    <!-- This servlet generates PNG images from SVG input -->
    <servlet-name>SVGServlet</servlet-name>
    <servlet-class>org.opennms.web.map.SVGServlet</servlet-class>
  </servlet>

  <servlet>
    <!-- This servlet generates PNG images from SVG input -->
    <servlet-name>SVGTranscoder</servlet-name>
    <servlet-class>org.opennms.web.map.SVGTranscoder</servlet-class>
  </servlet>

  <servlet>
    <!-- This servlet is used to set NodeParentID -->
    <servlet-name>modifyParent</servlet-name>
    <servlet-class>org.opennms.web.map.ModifyParentServlet</servlet-class>
  </servlet>
  
  <!-- python servlet for testing purposes - ->
  <servlet>
      <servlet-name>PyServlet</servlet-name>
      <servlet-class>org.python.util.PyServlet</servlet-class>
      <init-param>
          <param-name>python.home</param-name>
          <param-value>/home/larry/jython-2.1a1</param-value>
      </init-param>
  </servlet>
  <servlet-mapping>
      <servlet-name>PyServlet</servlet-name>
      <url-pattern>*.py</url-pattern>
  </servlet-mapping>
  <!- - python servlet for testing purposes -->

  <!-- desktop graph servlet mapping -->
  <!-- desktop survey report servlet mapping -->  
  
  <servlet-mapping>
    <servlet-name>snmpGraph</servlet-name>
    <url-pattern>/snmp/performance/graph.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpGraph</servlet-name>
    <url-pattern>/snmp/performance/graph</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>snmpAdHocGraph</servlet-name>
    <url-pattern>/snmp/performance/adhocGraph.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpAdHocGraph</servlet-name>
    <url-pattern>/snmp/performance/adhocGraph</url-pattern>
  </servlet-mapping>  

  <servlet-mapping>
    <servlet-name>rrddump</servlet-name>
    <url-pattern>/performance/dump</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rrddump</servlet-name>
    <url-pattern>/performance/raw</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rrdlist</servlet-name>
    <url-pattern>/performance/list</url-pattern>
  </servlet-mapping>  
  <servlet-mapping>
    <servlet-name>addPerfReportsToUrl</servlet-name>
    <url-pattern>/performance/addReportsToUrl</url-pattern>
  </servlet-mapping>  
  <servlet-mapping>
    <servlet-name>addIntfToPerfUrl</servlet-name>
    <url-pattern>/performance/addIntfFromNode</url-pattern>
  </servlet-mapping>  

  <servlet-mapping>
    <servlet-name>rt-rrddump</servlet-name>
    <url-pattern>/response/dump</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rt-rrddump</servlet-name>
    <url-pattern>/response/raw</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rt-rrdlist</servlet-name>
    <url-pattern>/response/list</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rt-addPerfReportsToUrl</servlet-name>
    <url-pattern>/response/addReportsToUrl</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rt-addIntfToPerfUrl</servlet-name>
    <url-pattern>/response/addIntfFromNode</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>rtGraph</servlet-name>
    <url-pattern>/response/graph.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rtGraph</servlet-name>
    <url-pattern>/response/graph</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>rtAdHocGraph</servlet-name>
    <url-pattern>/response/adhocGraph.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rtAdHocGraph</servlet-name>
    <url-pattern>/response/adhocGraph</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>availabilityXml</servlet-name>
    <url-pattern>/availability/availabilityRaw</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>availability</servlet-name>
    <url-pattern>/availability/availability</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>acknowledgeEvent</servlet-name>
    <url-pattern>/event/acknowledge</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>acknowledgeEventByFilter</servlet-name>
    <url-pattern>/event/acknowledgeByFilter</url-pattern>
  </servlet-mapping>  
  <servlet-mapping>
    <servlet-name>filterEvent</servlet-name>
    <url-pattern>/event/list</url-pattern>
  </servlet-mapping>    
  <servlet-mapping>
    <servlet-name>queryEvent</servlet-name>
    <url-pattern>/event/query</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>filterVulnerability</servlet-name>
    <url-pattern>/vulnerability/list</url-pattern>
  </servlet-mapping>    
  <servlet-mapping>
    <servlet-name>acknowledgeNotice</servlet-name>
    <url-pattern>/notification/acknowledge</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>queryNotice</servlet-name>
    <url-pattern>/notification/browse</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>queryOutage</servlet-name>
    <url-pattern>/outage/browse</url-pattern>
  </servlet-mapping>
  
  <!--servlet mapping for update notification status servlet -->
  <servlet-mapping>
    <servlet-name>updateNotificationStatus</servlet-name>
    <url-pattern>/admin/updateNotificationStatus</url-pattern>
  </servlet-mapping>
  
  <!-- servlet mapping for the destination wizard servlet -->
  <servlet-mapping>
    <servlet-name>destinationWizard</servlet-name>
    <url-pattern>/admin/notification/destinationWizard</url-pattern>
  </servlet-mapping>
  
  <!-- servlet mapping for the notification wizard servlet -->
  <servlet-mapping>
    <servlet-name>notificationWizard</servlet-name>
    <url-pattern>/admin/notification/noticeWizard/notificationWizard</url-pattern>
  </servlet-mapping>
    
  <!-- servlet mapping for configuring users groups and views -->
  <!-- user configuration servlets -->
  <servlet-mapping>
    <servlet-name>modifyUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/modifyUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/updateUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/saveUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>renameUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/renameUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addNewUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/addNewUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/deleteUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addDutySchedules</servlet-name>
    <url-pattern>/admin/userGroupView/users/addDutySchedules</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>removeDutySchedules</servlet-name>
    <url-pattern>/admin/userGroupView/users/removeDutySchedules</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addGroupDutySchedules</servlet-name>
    <url-pattern>/admin/userGroupView/groups/addGroupDutySchedules</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>removeGroupDutySchedules</servlet-name>
    <url-pattern>/admin/userGroupView/groups/removeDutySchedules</url-pattern>
  </servlet-mapping>
  <!-- end of user configuration servlets -->
  
  <!-- group configuration servlets -->
  <servlet-mapping>
    <servlet-name>modifyGroup</servlet-name>
    <url-pattern>/admin/userGroupView/groups/modifyGroup</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateGroup</servlet-name>
    <url-pattern>/admin/userGroupView/groups/updateGroup</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveGroup</servlet-name>
    <url-pattern>/admin/userGroupView/groups/saveGroup</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>renameGroup</servlet-name>
    <url-pattern>/admin/userGroupView/groups/renameGroup</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addNewGroup</servlet-name>
    <url-pattern>/admin/userGroupView/groups/addNewGroup</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteGroup</servlet-name>
    <url-pattern>/admin/userGroupView/groups/deleteGroup</url-pattern>
  </servlet-mapping>
  <!-- end of group configuration servlets -->
  
  <!-- view configuration servlets -->
  <servlet-mapping>
    <servlet-name>modifyView</servlet-name>
    <url-pattern>/admin/userGroupView/views/modifyView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateView</servlet-name>
    <url-pattern>/admin/userGroupView/views/updateView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveView</servlet-name>
    <url-pattern>/admin/userGroupView/views/saveView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>renameView</servlet-name>
    <url-pattern>/admin/userGroupView/views/renameView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addNewView</servlet-name>
    <url-pattern>/admin/userGroupView/views/addNewView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteView</servlet-name>
    <url-pattern>/admin/userGroupView/views/deleteView</url-pattern>
  </servlet-mapping>
  <!-- end of group configuration servlets -->
  
  <!-- end of user groups and views configuration servlets -->
  
  <!-- servlet mapping for event conf editing -->
  <servlet-mapping>
    <servlet-name>deleteEvent</servlet-name>
    <url-pattern>/admin/eventconf/deleteEvent</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>modifyParam</servlet-name>
    <url-pattern>/admin/eventconf/modifyParam</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateEvent</servlet-name>
    <url-pattern>/admin/eventconf/updateEvent</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveEvent</servlet-name>
    <url-pattern>/admin/eventconf/saveEvent</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>renameEvent</servlet-name>
    <url-pattern>/admin/eventconf/renameEvent</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>newEvent</servlet-name>
    <url-pattern>/admin/eventconf/newEvent</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>copyEvent</servlet-name>
    <url-pattern>/admin/eventconf/copyEvent</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rearrangeEvents</servlet-name>
    <url-pattern>/admin/eventconf/rearrangeEvents</url-pattern>
  </servlet-mapping>
  
  
  <!-- event mask servlet mappings -->
  <servlet-mapping>
    <servlet-name>newMaskElement</servlet-name>
    <url-pattern>/admin/eventconf/masks/newMaskElement</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateMaskElements</servlet-name>
    <url-pattern>/admin/eventconf/masks/updateMaskElements</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveMaskElements</servlet-name>
    <url-pattern>/admin/eventconf/masks/saveMaskElements</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteElement</servlet-name>
    <url-pattern>/admin/eventconf/masks/deleteElement</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>maskEditing</servlet-name>
    <url-pattern>/admin/eventconf/masks/maskEditing</url-pattern>
  </servlet-mapping>
  <!-- auto action servlet mappings -->
  <servlet-mapping>
    <servlet-name>autoActionEditing</servlet-name>
    <url-pattern>/admin/eventconf/autoActions/autoActionEditing</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>newAutoAction</servlet-name>
    <url-pattern>/admin/eventconf/autoActions/newAutoAction</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateAutoActions</servlet-name>
    <url-pattern>/admin/eventconf/autoActions/updateAutoActions</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveAutoActions</servlet-name>
    <url-pattern>/admin/eventconf/autoActions/saveAutoActions</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteAutoAction</servlet-name>
    <url-pattern>/admin/eventconf/autoActions/deleteAutoAction</url-pattern>
  </servlet-mapping>
  
  <!-- operator action servlet mappings -->
  <servlet-mapping>
    <servlet-name>operActionEditing</servlet-name>
    <url-pattern>/admin/eventconf/operActions/operActionEditing</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>newOperAction</servlet-name>
    <url-pattern>/admin/eventconf/operActions/newOperAction</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateOperActions</servlet-name>
    <url-pattern>/admin/eventconf/operActions/updateOperActions</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveOperActions</servlet-name>
    <url-pattern>/admin/eventconf/operActions/saveOperActions</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteOperAction</servlet-name>
    <url-pattern>/admin/eventconf/operActions/deleteOperAction</url-pattern>
  </servlet-mapping>
  
  <!-- forwards servlet mappings -->
  <servlet-mapping>
    <servlet-name>forwardsEditing</servlet-name>
    <url-pattern>/admin/eventconf/forwards/forwardsEditing</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>newForward</servlet-name>
    <url-pattern>/admin/eventconf/forwards/newForward</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateForwards</servlet-name>
    <url-pattern>/admin/eventconf/forwards/updateForwards</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveForwards</servlet-name>
    <url-pattern>/admin/eventconf/forwards/saveForwards</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteForward</servlet-name>
    <url-pattern>/admin/eventconf/forwards/deleteForward</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>nodeLabelChange</servlet-name>
    <url-pattern>/admin/nodeLabelChange</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>modifyAsset</servlet-name>
    <url-pattern>/asset/modifyAsset</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>importAssets</servlet-name>
    <url-pattern>/admin/asset/import/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>exportAssets</servlet-name>
    <url-pattern>/admin/asset/assets.csv</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>getInterfaces</servlet-name>
    <url-pattern>/admin/nodemanagement/getInterfaces</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addNewInterface</servlet-name>
    <url-pattern>/admin/addNewInterface</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteSelNodes</servlet-name>
    <url-pattern>/admin/deleteSelNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteNodes</servlet-name>
    <url-pattern>/admin/deleteNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
     <servlet-name>deleteInterface</servlet-name>
     <url-pattern>/admin/deleteInterface</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  	<servlet-name>deleteService</servlet-name>
  	<url-pattern>/admin/deleteService</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpGetNodes</servlet-name>
    <url-pattern>/admin/snmpGetNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpGetInterfaces</servlet-name>
    <url-pattern>/admin/snmpGetInterfaces</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>getNodes</servlet-name>
    <url-pattern>/admin/getNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>manageNodes</servlet-name>
    <url-pattern>/admin/manageNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
     <servlet-name>manageNode</servlet-name>
     <url-pattern>/admin/manageNode</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpManageNodes</servlet-name>
    <url-pattern>/admin/changeCollectStatus</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpConfig</servlet-name>
    <url-pattern>/admin/snmpConfig</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>pollerConfig</servlet-name>
    <url-pattern>/admin/pollerConfig/pollerConfig</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>finishPollerConfig</servlet-name>
    <url-pattern>/admin/pollerConfig/finishPollerConfig</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addPollerConfig</servlet-name>
    <url-pattern>/admin/pollerConfig/addPollerConfig</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
        <servlet-name>updateServiceNotify</servlet-name>
        <url-pattern>/admin/updateServiceNotify</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>rtcPost</servlet-name>
    <url-pattern>/rtc/post/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rtcRaw</servlet-name>
    <url-pattern>/rtc/raw</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sendMail</servlet-name>
    <url-pattern>/mail/send</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>nodeRescan</servlet-name>
    <url-pattern>/element/rescan</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>filterOutage</servlet-name>
    <url-pattern>/outage/list</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SVGServlet</servlet-name>
    <url-pattern>/map/SVGServlet</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>SVGTranscoder</servlet-name>
    <url-pattern>/map/SVGTranscoder</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>modifyParent</servlet-name>
    <url-pattern>/map/modifyParent</url-pattern>
  </servlet-mapping>

  <error-page>
    <exception-type>org.opennms.web.category.CategoryNotFoundException</exception-type>
    <location>/errors/categorynotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.MissingParameterException</exception-type>
    <location>/errors/missingparam.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.event.EventIdNotFoundException</exception-type>
    <location>/errors/eventidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.notification.NoticeIdNotFoundException</exception-type>
    <location>/errors/noticeidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.outage.OutageIdNotFoundException</exception-type>
    <location>/errors/outageidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>java.lang.SecurityException</exception-type>
    <location>/errors/sealingviolation.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.vulnerability.VulnerabilityIdNotFoundException</exception-type>
    <location>/errors/vulnerabilityidnotfound.jsp</location>
  </error-page>  
  <error-page>
    <exception-type>org.opennms.netmgt.utils.EventProxyException</exception-type>
    <location>/errors/eventproxyexception.jsp</location>
  </error-page>  
  <error-page>
    <exception-type>java.lang.Exception</exception-type>
    <location>/errors/unknownexception.jsp</location>
  </error-page>  
  

  <!-- Note: The order of these security-constraints is significant! -->
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Administrative Controls</web-resource-name>
      <url-pattern>/admin/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>OpenNMS Administrator</role-name>
    </auth-constraint>
  </security-constraint>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Real-Time Console Data Update Servlets</web-resource-name>
      <url-pattern>/rtc/post/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>OpenNMS RTC Daemon</role-name>
    </auth-constraint>
  </security-constraint>
  <security-constraint>  
    <web-resource-collection>    
      <web-resource-name>Entire Application</web-resource-name>
      <url-pattern>/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>OpenNMS User</role-name>
    </auth-constraint>
  </security-constraint>

  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>OpenNMS Web Console</realm-name>
  </login-config>

  <security-role>
    <description>
      OpenNMS Administrator
    </description>
    <role-name>OpenNMS Administrator</role-name>
  </security-role>

  <security-role>
    <description>
      OpenNMS RTC Daemon
    </description>
    <role-name>OpenNMS RTC Daemon</role-name>
  </security-role>

  <security-role>
    <description>
      OpenNMS User
    </description>
    <role-name>OpenNMS User</role-name>
  </security-role>

</web-app>
