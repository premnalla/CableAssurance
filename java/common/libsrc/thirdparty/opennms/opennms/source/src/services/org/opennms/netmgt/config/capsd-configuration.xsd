<?xml version="1.0"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://xmlns.opennms.org/xsd/config/capsd">

	<element name="capsd-configuration">
		<complexType>
			<sequence>
				<!-- a protocol/service plugin -->
				<element ref="protocol-plugin" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- SMB protocol configuration (primarily for SMB authentication) -->
				<element ref="smb-config" minOccurs="0" maxOccurs="1"/>
				
				<!-- managed/unmanaged IP addresses and ranges. -->
				<element ref="ip-management" minOccurs="0" maxOccurs="unbounded"/>
			</sequence>
			<!-- interval (in milliseconds) between IP address re-scans -->
			<attribute name="rescan-frequency" type="long" use="optional"/>
			
			<!-- interval (in milliseconds) between Capsd startup and the start of
				 rescan processing. 
			-->
			<attribute name="initial-sleep-time" type="long" use="optional"/>
			
			<!-- max number of threads available for processing 'newSuspect' events
				 from discovery.
			-->
			<attribute name="max-suspect-thread-pool-size" type="positiveInteger" use="required"/>
			
			<!-- max number of threads available for rescanning managed interfaces -->
			<attribute name="max-rescan-thread-pool-size" type="positiveInteger" use="required"/>
			
			<!-- default management policy -->
			<attribute name="management-policy" type="string" use="optional">
				<simpleType>
					<restriction base="string">
						<pattern value="(managed|unmanaged)"/>
					</restriction>
				</simpleType>
			</attribute>
			
			<!-- Flag which determines Capsd's behavior in the event that a NoRouteToHost
				 exception is generated during a protocol plugin scan of an interface.  
				 If true, Capsd will abort the protocol scanning process for the interface.
			-->
			<attribute name="abort-protocol-scans-if-no-route" type="string" use="optional">
				<simpleType>
					<restriction base="string">
						<pattern value="(true|false)"/>
					</restriction>
				</simpleType>
			</attribute>
			
			<!-- Determine if deleting an service propagates to deleting the interface
				 if the service is the only one remaining on the interface. Likewise for 
				 the only interface on a node.
		 	-->
			<attribute name="delete-propagation-enabled" type="string" use="required">
				<simpleType>
					<restriction base="string">
						<pattern value="(true|false)"/>
					</restriction>
				</simpleType>
			</attribute>
			
			
			<!-- Flag which indicates if an external XMLRPC server has to be notified with
                             any event process errors
                        -->
			<attribute name="xmlrpc" type="string" use="optional" default="false">
				<simpleType>
					<restriction base="string">
						<pattern value="(true|false)"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>

	<!-- protocol plugin definition -->
	<element name="protocol-plugin">
		<complexType>
			<sequence>
				<!-- IP address/range specific protocol configuration -->
				<element ref="protocol-configuration" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- key/value pair passed in to the plugin -->
				<element ref="property" minOccurs="0" maxOccurs="unbounded"/>
			</sequence>
			<!-- protocol name -->
			<attribute name="protocol" type="string" use="required"/>
			
			<!-- Java class name of the plugin capable of testing the protocol -->
			<attribute name="class-name" type="string" use="required"/>
			
			<!-- controls whether or not protocol is actually scanned by Capsd -->
			<attribute name="scan" type="string" use="optional">
				<simpleType>
					<restriction base="string">
						<pattern value="(on|off)"/>
					</restriction>
				</simpleType>
			</attribute>
			
			<!-- specifies if the protocol was added by the user via the UI -->
			<attribute name="user-defined" type="string" use="optional">
				<simpleType>
					<restriction base="string">
						<pattern value="(true|false)"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>

	<!-- IP address/range specific protocol configuration -->
	<element name="protocol-configuration">
		<complexType>
			<sequence>
				<!-- IP address to which the protocol configuration applies -->
				<element name="specific" type="string" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- IP address range to which the protocol configuration applies -->
				<element ref="range" type="string" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- key/value pair passed in to the plugin -->
				<element ref="property" minOccurs="0" maxOccurs="unbounded"/>
			</sequence>
			
			<!-- controls whether or not the protocol is actually scanned by Capsd
				 
				 NOTE:  Value of 'enable' causes the protocol to be added as supported 
				 without performing the protocol scan.
			-->
			<attribute name="scan" type="string" use="optional">
				<simpleType>
					<restriction base="string">
						<pattern value="(on|off|enable)"/>
					</restriction>
				</simpleType>
			</attribute>
			
			<!-- specifies if the protocol was added by the user via the UI -->
			<attribute name="user-defined" type="string" use="required">
				<simpleType>
				
					<restriction base="string">
						<pattern value="(true|false)"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>

	<!-- key/value pair -->
	<element name="property">
		<complexType>
			<!-- key -->
			<attribute name="key" type="string" use="required"/>
			<!-- value -->
			<attribute name="value" type="string" use="required"/>
		</complexType>
	</element>

	<!-- SMB configuration -->
	<element name="smb-config">
		<complexType>
			<sequence>
				<!-- SMB authentication -->
				<element ref="smb-auth" minOccurs="1" maxOccurs="unbounded"/>
			</sequence>
		</complexType>
	</element>

	<!-- SMB authentication 
	
		 SMB authentication is not required by jCIFS in order to determine the
		 NetBIOS name for a remote host which supports SMB.  However it may
		 be required in order to enumerate the hosts's list of file shares.  It
		 is during this enumeration that we are able to determine the operating 
		 system and MAC address of the remote system.
		 
		 SMB urls (for enumerating file shares) are formatted as follows:
		 
		 If no matching SmbAuth object url has format:
			smb://<netbios_name>
		 
		 For server authentication url has format:
			smb://<userid>:<password>@<netbios_name>
		
		 For domain authentication url has format:
			smb://<domain>;<userid>:<password>@<netbios_name>
	-->
	<element name="smb-auth">
		<complexType>
			<!-- content of smb-auth is the NetBIOS (domain or server) name -->
			<simpleContent>
				<extension base="string">
					<!-- user id -->
					<attribute name="user" use="required" type="string"/>
					
					<!-- password -->
					<attribute name="password" use="required" type="string"/>
					
					<!-- authentication type -->
					<attribute name="type" use="required" type="string">
						<simpleType>
							<restriction base="string">
								<pattern value="(domain|server)"/>
							</restriction>
						</simpleType>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<!-- IP Management 
	
		 Overrides default IP management policy for the specified set of IP addresses
	-->
	<element name="ip-management">
		<complexType>
			<sequence>
				<!-- Specific IP address -->
				<element name="specific" type="string" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- IP address range -->
				<element ref="range" minOccurs="0" maxOccurs="unbounded"/>
				
				<!-- url of text file containing list of IP addresses (one IP address
				     per line).
				-->
				<element name="include-url" type="string" minOccurs="0" maxOccurs="unbounded"/>
			</sequence>
			<!-- Management policy -->
			<attribute name="policy" type="string" use="optional">
				<simpleType>
					<restriction base="string">
						<pattern value="(managed|unmanaged)"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>

	<!-- include SNMP configuration -->
	<include schemaLocation="snmp-config.xsd"/>
</schema>
